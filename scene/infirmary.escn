[gd_scene load_steps=1 format=2]

[ext_resource id=1 path="Free-Photoshop-Purity-Wood-Texture.jpg" type="Texture"]

[ext_resource id=2 path="MarbleBase0083_1_download600.jpg" type="Texture"]

[ext_resource id=3 path="seamless-plaster-wall-texture-seamless-texture-white-cement-pla.jpg" type="Texture"]

[ext_resource id=4 path="a6893b1ae9af166f5dcb9244eccdc455.jpg" type="Texture"]

[ext_resource id=5 path="ceiling__tiles.tga.targa_raw" type="Texture"]

[ext_resource id=6 path="Seamless_White_Brick_Texture.jpg" type="Texture"]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)
shader_param/texture_0 = ExtResource(2)

[sub_resource id=5 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=6 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(5)
shader_param/texture_0 = ExtResource(3)

[sub_resource id=7 type="ArrayMesh"]

resource_name = "Cylinder"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-3.93923, 1.4, 0.694594, -3.79999, -1.78814e-07, 0.0, -3.74226, -1.78814e-07, 0.659862, -3.75877, 1.4, 1.36808, -3.57082, -1.78814e-07, 1.29967, -3.4641, 1.4, 2.0, -3.29088, -1.78814e-07, 1.9, -3.06418, 1.4, 2.57115, -2.91096, -1.78814e-07, 2.44259, -2.57115, 1.4, 3.06418, -2.44258, -1.78814e-07, 2.91097, -2.0, 1.4, 3.4641, -1.89999, -1.78814e-07, 3.29089, -1.36808, 1.4, 3.75877, -1.29966, -1.78814e-07, 3.57083, -0.694591, 1.4, 3.93923, -0.65985, -1.78814e-07, 3.74227, 0.0, -1.78814e-07, 3.8, 0.0, 1.0, 3.85014, -0.670013, 1.35, 3.79165, 0.0, 1.35, 3.85014, -0.670013, 1.0, 3.79165, -1.31824, 1.35, 3.61796, -1.31824, 1.0, 3.61796, -1.92647, 1.35, 3.33434, -1.92647, 1.0, 3.33434, -2.4762, 1.35, 2.94941, -1.92647, 1.35, 3.33434, -2.4762, 1.0, 2.94941, -2.95074, 1.35, 2.47488, -2.95074, 1.0, 2.47488, -3.33566, 1.35, 1.92514, -3.33566, 1.0, 1.92514, -3.61928, 1.35, 1.31692, -3.61928, 1.0, 1.31692, -3.79298, 1.35, 0.668689, -3.85147, 1.0, 0.0, -3.79298, 1.0, 0.668689, 0.0, 0.0, 3.65754, -0.635145, 0.95, 3.60198, 0.0, 0.95, 3.65754, -1.25096, 0.0, 3.43697, -1.25096, 0.95, 3.43697, -1.82878, 0.0, 3.16753, -1.82878, 0.95, 3.16753, -1.82878, 0.0, 3.16753, -2.35102, 0.95, 2.80185, -1.82878, 0.95, 3.16753, -2.80183, 0.95, 2.35104, -2.35102, 0.0, 2.80185, -2.80183, 0.0, 2.35104, -3.16751, 0.95, 1.82879, -3.16751, 0.0, 1.82879, -3.43695, 0.95, 1.25098, -3.43695, 0.0, 1.25098, -3.60196, 0.95, 0.635164, -3.60196, 0.0, 0.635164, -3.65753, 0.95, 0.0, -3.65753, 0.0, 0.0, 0.0, 1.0, 3.85014, 0.0, 1.4, 3.0, 0.0, 1.0, 3.0, 0.0, 1.4, 3.50003, 0.0, 1.35, 3.50003, 0.0, 1.35, 3.85014, 0.0, 0.95, 3.0, 0.0, 0.0, 3.65754, 0.0, 0.95, 3.65754, 0.05, -1.78814e-07, 3.0, 0.0, 1.4, 3.0, 0.05, 1.4, 3.0, 0.0, 1.4, 3.0, 0.0, 1.4, 3.50003, 0.05, 1.4, 3.0, 0.05, 1.4, 4.0, 0.0, 1.4, 4.0, 0.05, -1.78814e-07, 3.8, 0.0, 1.4, 4.0, 0.05, 1.4, 4.0, 0.05, -1.78814e-07, 3.0, 0.05, 1.4, 3.0, -4.0, 1.4, 0.0, -1.92647, 1.0, 3.33434, -3.85147, 1.35, 0.0, -0.635145, 0.0, 3.60198, 0.0, -1.78814e-07, 3.0, 0.0, -1.78814e-07, 3.0, 0.05, 1.4, 4.0, 0.05, -1.78814e-07, 3.8),
		Vector3Array(-0.974883, -0.141423, 0.17188, -0.986236, -0.140873, 0.0862758, -0.974883, -0.141423, 0.17188, -0.930235, -0.141423, 0.338572, -0.930235, -0.141423, 0.338572, -0.857295, -0.141423, 0.494949, -0.857295, -0.141423, 0.494949, -0.758324, -0.141423, 0.636311, -0.758324, -0.141423, 0.636311, -0.636311, -0.141423, 0.758324, -0.636311, -0.141423, 0.758324, -0.494949, -0.141423, 0.857295, -0.494949, -0.141423, 0.857295, -0.338572, -0.141423, 0.930235, -0.338572, -0.141423, 0.930235, -0.17188, -0.141423, 0.974883, -0.17188, -0.141423, 0.974883, -0.0433363, -0.14127, 0.989013, 0.0869472, 0.0, -0.996185, 0.12595, -0.687979, -0.714682, 0.0632038, -0.686666, -0.724204, 0.173528, 0.0, -0.984802, 0.248177, -0.687979, -0.681936, 0.34199, 0.0, -0.939665, 0.362835, -0.687979, -0.628468, 0.499985, 0.0, -0.866024, 0.466445, -0.687979, -0.555895, 0.362835, -0.687979, -0.628468, 0.642781, 0.0, -0.766015, 0.555895, -0.687979, -0.466445, 0.766015, 0.0, -0.642781, 0.628468, -0.687979, -0.362835, 0.866024, 0.0, -0.499985, 0.681936, -0.687979, -0.248177, 0.939665, 0.0, -0.34199, 0.714682, -0.687979, -0.126011, 0.996185, 0.0, -0.0871303, 0.984802, 0.0, -0.17362, 0.0871303, 0.0, -0.996185, 0.17362, 0.0, -0.984802, 0.0871303, 0.0, -0.996185, 0.34199, 0.0, -0.939665, 0.34199, 0.0, -0.939665, 0.499985, 0.0, -0.866024, 0.499985, 0.0, -0.866024, 0.499985, 0.0, -0.866024, 0.642781, 0.0, -0.766015, 0.499985, 0.0, -0.866024, 0.766015, 0.0, -0.642781, 0.642781, 0.0, -0.766015, 0.766015, 0.0, -0.642781, 0.866024, 0.0, -0.499985, 0.866024, 0.0, -0.499985, 0.939665, 0.0, -0.34199, 0.939665, 0.0, -0.34199, 0.984802, 0.0, -0.17362, 0.984802, 0.0, -0.17362, 0.996185, 0.0, -0.0871303, 0.996185, 0.0, -0.0871303, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.894406, -0.447188, 0.0, 0.0, -1.0, 0.0, 0.894406, -0.447188, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.882595, 0.470107, -0.0430006, -0.14127, 0.989013, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, -0.986236, -0.140873, 0.0862758, 0.499985, 0.0, -0.866024, 0.724235, -0.686605, -0.0633259, 0.17362, 0.0, -0.984802, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.882595, 0.470107, 1.0, 0.0, 0.0),
		FloatArray(0.176418, -0.0200626, 0.984111, 1.0, 0.0903099, -0.0224707, 0.99566, 1.0, 0.176418, -0.0200626, 0.984111, 1.0, 0.343966, -0.0148128, 0.938865, 1.0, 0.343966, -0.0148128, 0.938865, 1.0, 0.501099, -0.00911985, 0.865342, 1.0, 0.501099, -0.00911973, 0.865342, 1.0, 0.64313, -0.00315094, 0.76575, 1.0, 0.64313, -0.00315087, 0.76575, 1.0, 0.765773, 0.00291076, 0.643104, 1.0, 0.765773, 0.00291068, 0.643104, 1.0, 0.86536, 0.00888699, 0.501071, 1.0, 0.86536, 0.00888689, 0.501071, 1.0, 0.938879, 0.0145941, 0.343937, 1.0, 0.938879, 0.014594, 0.343937, 1.0, 0.98412, 0.0198648, 0.17639, 1.0, 0.98412, 0.0198648, 0.17639, 1.0, 0.998615, 0.0234294, 0.0471037, 1.0, 0.984714, 0.1515, 0.085946, -1.0, 0.991921, 0.0763818, 0.101287, -1.0, 0.996698, 0.0804913, 0.0106695, -1.0, 0.974435, 0.144898, 0.171702, -1.0, 0.957536, 0.0676083, 0.280275, -1.0, 0.931914, 0.128453, 0.33917, -1.0, 0.906913, 0.105748, 0.407831, -1.0, 0.861955, 0.0969032, 0.497638, -1.0, 0.791575, 0.0442322, 0.609469, -1.0, 0.869578, 0.00759261, 0.493737, -1.0, 0.763313, 0.084235, 0.640514, -1.0, 0.664216, 0.0302882, 0.746927, -1.0, 0.641726, 0.057727, 0.764758, -1.0, 0.512511, 0.0153919, 0.858542, -1.0, 0.499774, 0.0293444, 0.865659, -1.0, 0.342003, 1.87773e-05, 0.939699, -1.0, 0.342003, -5.32036e-07, 0.939699, -1.0, 0.159236, -0.015386, 0.987121, -1.0, 0.087048, -0.0437279, 0.995244, -1.0, 0.173547, -0.029347, 0.984388, -1.0, 0.9847, 0.151487, 0.0861258, -1.0, 0.97442, 0.144891, 0.17179, -1.0, 0.9847, 0.151487, 0.0861258, -1.0, 0.931914, 0.128452, 0.33917, -1.0, 0.931914, 0.128452, 0.33917, -1.0, 0.859861, 0.119172, 0.496425, -1.0, 0.859861, 0.119172, 0.496425, -1.0, 0.861955, 0.0969033, 0.497638, -1.0, 0.763313, 0.084235, 0.640514, -1.0, 0.861955, 0.096903, 0.497638, -1.0, 0.641726, 0.0577269, 0.764758, -1.0, 0.763313, 0.084235, 0.640514, -1.0, 0.641726, 0.0577269, 0.764758, -1.0, 0.499774, 0.0293443, 0.865659, -1.0, 0.499774, 0.0293443, 0.865659, -1.0, 0.342003, -6.5641e-07, 0.939699, -1.0, 0.342003, -6.79239e-07, 0.939699, -1.0, 0.173547, -0.0293459, 0.984388, -1.0, 0.173547, -0.0293458, 0.984388, -1.0, 0.087048, -0.0437258, 0.995244, -1.0, 0.087048, -0.0437257, 0.995244, -1.0, 0.0, 0.0577391, -0.998332, -1.0, 0.0, 0.0577394, -0.998332, -1.0, 0.0, 0.0577393, -0.998332, -1.0, 0.0, 0.0577397, -0.998332, -1.0, 0.0, 0.0577395, -0.998332, -1.0, 0.0, 0.0577387, -0.998332, -1.0, 0.0, 0.0577392, -0.998332, -1.0, 0.0, 0.0577391, -0.998332, -1.0, 0.0, 0.0577393, -0.998332, -1.0, 0.997485, 0.0317063, 0.0633954, -1.0, 0.987609, 0.156932, 0.0, -1.0, 0.997485, 0.0317063, 0.0633954, -1.0, -0.342025, 0.0, -0.939691, 1.0, -0.342026, 0.0, -0.939691, 1.0, -0.342025, 0.0, -0.939691, 1.0, -0.342025, 0.0, -0.939691, 1.0, -0.342025, 0.0, -0.939691, 1.0, 0.999964, 0.00396986, -0.00745193, 1.0, 0.998631, 0.0234398, 0.0467669, 1.0, 0.0, 0.0577393, -0.998332, 1.0, 0.0, 0.0577393, -0.998332, 1.0, 0.0, 0.0577393, -0.998332, 1.0, 0.0903099, -0.0224706, 0.99566, 1.0, 0.859861, 0.119171, 0.496425, -1.0, 0.0653226, -0.0231082, 0.997597, -1.0, 0.97442, 0.144891, 0.17179, -1.0, 0.0, 0.057739, -0.998332, -1.0, 0.987609, 0.156932, 0.0, -1.0, 0.999964, 0.00397056, -0.00745323, 1.0, 0.0, 0.0577393, -0.998332, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.299239, 0.384327, 0.278582, 0.620958, 0.29319, 0.618469, 0.31831, 0.382285, 0.310238, 0.616529, 0.344751, 0.380883, 0.333167, 0.615198, 0.393819, 0.380164, 0.376271, 0.614515, 0.51574, 0.38015, 0.516591, 0.614502, 0.630641, 0.380841, 0.647186, 0.615158, 0.676624, 0.382217, 0.687764, 0.616465, 0.702173, 0.384234, 0.710075, 0.618381, 0.726893, 0.62085, 0.381757, 0.516861, 0.357165, 0.442404, 0.384731, 0.459344, 0.352498, 0.499921, 0.31028, 0.427128, 0.302607, 0.484645, 0.212566, 0.413941, 0.973457, 0.471458, 0.870268, 0.403245, 0.980899, 0.413941, 0.871174, 0.460762, 0.815093, 0.395364, 0.817896, 0.45288, 0.784838, 0.390537, 0.787562, 0.448054, 0.763634, 0.388912, 0.766057, 0.446428, 0.74644, 0.390537, 0.733242, 0.452882, 0.748585, 0.448054, 0.383095, 0.683026, 0.365926, 0.510851, 0.391742, 0.526908, 0.294879, 0.652456, 0.319547, 0.496339, 0.184399, 0.639928, 0.205232, 0.483811, 0.952732, 0.639928, 0.852963, 0.47365, 0.973565, 0.483811, 0.803822, 0.466162, 0.858344, 0.629767, 0.81236, 0.622279, 0.777316, 0.461577, 0.785094, 0.617694, 0.758258, 0.460033, 0.765062, 0.61615, 0.742418, 0.461577, 0.748411, 0.617694, 0.728238, 0.466163, 0.733583, 0.62228, 0.381757, 0.516861, 0.438582, 0.459208, 0.436133, 0.524941, 0.404813, 0.454455, 0.404416, 0.462672, 0.384731, 0.459344, 0.435814, 0.533158, 0.383095, 0.683026, 0.391742, 0.526908, 0.430063, 0.690581, 0.438582, 0.459208, 0.439105, 0.460514, 0.438582, 0.459208, 0.404813, 0.454455, 0.439105, 0.460514, 0.379539, 0.451009, 0.377816, 0.449703, 0.728033, 0.621055, 0.720894, 0.386833, 0.379539, 0.451009, 0.430063, 0.690581, 0.439105, 0.460514, 0.283333, 0.386947, 0.205123, 0.471458, 0.731326, 0.395365, 0.351846, 0.666968, 0.429168, 0.689275, 0.429168, 0.689275, 0.722083, 0.387038, 0.377276, 0.682977),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 4, 2, 5, 6, 4, 7, 8, 6, 9, 10, 8, 11, 12, 10, 13, 14, 12, 15, 16, 14, 17, 16, 15, 18, 20, 19, 21, 19, 22, 23, 22, 24, 25, 27, 26, 28, 26, 29, 30, 29, 31, 32, 31, 33, 34, 33, 35, 36, 37, 35, 38, 40, 39, 39, 42, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 52, 50, 53, 54, 52, 55, 56, 54, 57, 58, 56, 59, 61, 60, 62, 63, 60, 63, 64, 59, 65, 67, 66, 68, 70, 69, 71, 73, 72, 73, 74, 72, 72, 74, 75, 76, 17, 77, 78, 80, 79, 0, 1, 81, 3, 2, 0, 5, 4, 3, 7, 6, 5, 9, 8, 7, 11, 10, 9, 13, 12, 11, 15, 14, 13, 17, 15, 77, 18, 19, 21, 21, 22, 23, 23, 24, 82, 25, 26, 28, 28, 29, 30, 30, 31, 32, 32, 33, 34, 34, 35, 37, 36, 35, 83, 38, 39, 84, 39, 41, 84, 42, 43, 41, 45, 46, 49, 48, 49, 46, 51, 50, 48, 53, 52, 51, 55, 54, 53, 57, 56, 55, 59, 60, 63, 65, 66, 85, 68, 69, 86, 76, 77, 87, 78, 79, 88)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 1.4, 3.50003, -0.607764, 1.35, 3.44685, -0.607764, 1.4, 3.44685, -1.19707, 1.35, 3.28895, -1.19707, 1.4, 3.28895, -1.74999, 1.35, 3.03111, -1.74999, 1.4, 3.03111, -2.24975, 1.35, 2.68118, -2.24975, 1.4, 2.68118, -2.68115, 1.35, 2.24978, -2.68115, 1.4, 2.24978, -2.68115, 1.4, 2.24978, -3.03108, 1.35, 1.75003, -3.03108, 1.4, 1.75003, -3.28892, 1.35, 1.1971, -3.28892, 1.4, 1.1971, -3.44682, 1.35, 0.607795, -3.44682, 1.4, 0.607795, -3.5, 1.35, 0.0, -3.5, 1.4, 0.0, -3.93923, 1.4, 0.694594, -3.5, 1.4, 0.0, -4.0, 1.4, 0.0, -3.75877, 1.4, 1.36808, -3.44682, 1.4, 0.607795, -3.4641, 1.4, 2.0, -3.28892, 1.4, 1.1971, -3.06418, 1.4, 2.57115, -3.03108, 1.4, 1.75003, -2.57115, 1.4, 3.06418, -2.68115, 1.4, 2.24978, -3.06418, 1.4, 2.57115, -2.0, 1.4, 3.4641, -2.24975, 1.4, 2.68118, -1.36808, 1.4, 3.75877, -1.74999, 1.4, 3.03111, -0.694591, 1.4, 3.93923, -1.19707, 1.4, 3.28895, -1.36808, 1.4, 3.75877, 0.0, 1.4, 4.0, -0.607764, 1.4, 3.44685, -0.694591, 1.4, 3.93923, -0.520943, 1.0, 2.95442, 0.0, 1.0, 3.85014, 0.0, 1.0, 3.0, -1.02606, 1.0, 2.81908, -0.670013, 1.0, 3.79165, -1.5, 1.0, 2.59808, -1.31824, 1.0, 3.61796, -1.92836, 1.0, 2.29813, -1.92647, 1.0, 3.33434, -2.29813, 1.0, 1.92836, -2.4762, 1.0, 2.94941, -2.59808, 1.0, 1.5, -2.95074, 1.0, 2.47488, -2.81908, 1.0, 1.02606, -3.33566, 1.0, 1.92514, -2.95442, 1.0, 0.520946, -3.61928, 1.0, 1.31692, -2.81908, 1.0, 1.02606, -3.85147, 1.0, 0.0, -3.0, 1.0, 0.0, -0.520943, 0.95, 2.95442, 0.0, 1.0, 3.0, 0.0, 0.95, 3.0, -1.02606, 1.0, 2.81908, -0.520943, 1.0, 2.95442, -1.02606, 0.95, 2.81908, -1.5, 1.0, 2.59808, -1.5, 0.95, 2.59808, -1.92836, 1.0, 2.29813, -1.92836, 0.95, 2.29813, -2.29813, 1.0, 1.92836, -2.29813, 0.95, 1.92836, -2.59808, 1.0, 1.5, -2.29813, 1.0, 1.92836, -2.59808, 0.95, 1.5, -2.81908, 1.0, 1.02606, -2.81908, 0.95, 1.02606, -2.95442, 1.0, 0.520946, -3.0, 1.0, 0.0, -2.95442, 0.95, 0.520946, -3.0, 0.95, 0.0, 0.0, 1.35, 3.50003, -2.68115, 1.35, 2.24978, -1.74999, 1.4, 3.03111, 0.0, 1.4, 3.50003, -1.92647, 1.0, 3.33434, -3.79298, 1.0, 0.668689, -3.79298, 1.0, 0.668689, -2.29813, 0.95, 1.92836),
		Vector3Array(0.0871303, 0.0, -0.996185, 0.17362, 0.0, -0.984802, 0.17362, 0.0, -0.984802, 0.34199, 0.0, -0.939665, 0.34199, 0.0, -0.939665, 0.499985, 0.0, -0.866024, 0.499985, 0.0, -0.866024, 0.642781, 0.0, -0.766015, 0.642781, 0.0, -0.766015, 0.766015, 0.0, -0.642781, 0.766015, 0.0, -0.642781, 0.766015, 0.0, -0.642781, 0.866024, 0.0, -0.499985, 0.866024, 0.0, -0.499985, 0.939665, 0.0, -0.34199, 0.939665, 0.0, -0.34199, 0.984802, 0.0, -0.17362, 0.984802, 0.0, -0.17362, 0.996185, 0.0, -0.0871303, 0.996185, 0.0, -0.0871303, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 0.999969, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.17362, 0.0, -0.984802, 0.0871303, 0.0, -0.996185, 0.0871303, 0.0, -0.996185, 0.34199, 0.0, -0.939665, 0.17362, 0.0, -0.984802, 0.34199, 0.0, -0.939665, 0.499985, 0.0, -0.866024, 0.499985, 0.0, -0.866024, 0.642781, 0.0, -0.766045, 0.642781, 0.0, -0.766045, 0.766015, 0.0, -0.642781, 0.766015, 0.0, -0.642781, 0.866024, 0.0, -0.499985, 0.766015, 0.0, -0.642781, 0.866024, 0.0, -0.499985, 0.939665, 0.0, -0.34199, 0.939665, 0.0, -0.34199, 0.984802, 0.0, -0.17362, 0.996185, 0.0, -0.0871303, 0.984802, 0.0, -0.17362, 0.996185, 0.0, -0.0871303, 0.0871303, 0.0, -0.996185, 0.766015, 0.0, -0.642781, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999969, 0.0, 0.766015, 0.0, -0.642781),
		FloatArray(0.996197, 0.0, 0.0871314, -1.0, 0.984812, 0.0, 0.173622, -1.0, 0.984812, 0.0, 0.173622, -1.0, 0.939699, 0.0, 0.342003, -1.0, 0.939699, 0.0, 0.342003, -1.0, 0.866032, 0.0, 0.499989, -1.0, 0.866032, 0.0, 0.499989, -1.0, 0.766035, 0.0, 0.642798, -1.0, 0.766035, 0.0, 0.642798, -1.0, 0.642802, 0.0, 0.766032, -1.0, 0.642802, 0.0, 0.766032, -1.0, -0.642795, 0.0, -0.766038, 1.0, -0.499989, 0.0, -0.866032, 1.0, -0.499989, 0.0, -0.866032, 1.0, -0.342003, 0.0, -0.939699, 1.0, -0.342003, 0.0, -0.939699, 1.0, -0.173622, 0.0, -0.984812, 1.0, -0.173622, 0.0, -0.984812, 1.0, -0.0871314, 0.0, -0.996197, 1.0, -0.0871314, 0.0, -0.996197, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.68354e-07, 1.0, 1.0, 0.0, 5.77722e-08, 1.0, 1.0, 0.0, 1.01504e-08, 1.0, 1.0, 0.0, 1.79961e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.90349e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.97138e-12, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 9.83391e-12, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.55751e-11, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.984812, 0.0, 0.173622, -1.0, 0.996197, 0.0, 0.0871314, -1.0, 0.996197, 0.0, 0.0871314, -1.0, 0.939699, 0.0, 0.342003, -1.0, 0.984812, 0.0, 0.173622, -1.0, 0.939699, 0.0, 0.342003, -1.0, 0.866032, 0.0, 0.499989, -1.0, 0.866032, 0.0, 0.499989, -1.0, 0.766048, 0.0, 0.642783, -1.0, 0.766048, 0.0, 0.642783, -1.0, 0.642802, 0.0, 0.766032, -1.0, -0.642795, 0.0, -0.766039, 1.0, -0.499989, 0.0, -0.866032, 1.0, -0.642795, 0.0, -0.766038, 1.0, -0.499989, 0.0, -0.866032, 1.0, -0.342003, 0.0, -0.939699, 1.0, -0.342003, 0.0, -0.939699, 1.0, -0.173622, 0.0, -0.984812, 1.0, -0.0871314, 0.0, -0.996197, 1.0, -0.173622, 0.0, -0.984812, 1.0, -0.0871314, 0.0, -0.996197, 1.0, 0.996197, 0.0, 0.0871314, -1.0, -0.642795, 0.0, -0.766038, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.71099e-11, 0.0, 1.0, 0.642802, 0.0, 0.766032, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(1.58554, 0.39375, 1.28166, 0.41875, 1.28166, 0.39375, 0.987011, 0.41875, 0.987011, 0.39375, 0.710546, 0.41875, 0.710546, 0.39375, 0.460668, 0.41875, 0.460668, 0.39375, 0.244968, 0.41875, 0.244968, 0.39375, 0.46058, 0.39375, 0.710458, 0.41875, 0.710458, 0.39375, 0.986923, 0.41875, 0.986923, 0.39375, 1.28157, 0.41875, 1.28157, 0.39375, 1.58547, 0.41875, 1.58547, 0.39375, -0.330406, -0.291759, -0.110789, -0.639057, -0.360791, -0.639057, -0.240176, 0.0449843, -0.0842024, -0.335159, -0.0928415, 0.360944, -0.00525081, -0.0405083, 0.10712, 0.646519, 0.123667, 0.235956, 0.353634, 0.893033, 0.298633, 0.485835, 0.10712, 0.646519, 0.63921, 1.09299, 0.514333, 0.701534, 0.955169, 1.24033, 0.764211, 0.876501, 1.29191, 1.33056, 1.04068, 1.00542, 0.955169, 1.24033, 1.63921, 1.36094, 1.33533, 1.08437, 1.29191, 1.33056, 1.37874, 0.838155, 1.63921, 1.28601, 1.63921, 0.860943, 1.12618, 0.770483, 1.3042, 1.25677, 0.88921, 0.659982, 0.980087, 1.16992, 0.675028, 0.51001, 0.675976, 1.02811, 0.490142, 0.325125, 0.40111, 0.835651, 0.340171, 0.110944, 0.16384, 0.598381, 0.22967, -0.126026, -0.0286233, 0.323515, 0.161997, -0.378584, -0.170433, 0.019404, 0.22967, -0.126026, -0.286525, -0.639057, 0.139209, -0.639057, 1.32507, 0.61875, 1.58554, 0.59375, 1.58554, 0.61875, 1.07251, 0.59375, 1.32507, 0.59375, 1.07251, 0.61875, 0.835544, 0.59375, 0.835544, 0.61875, 0.621363, 0.59375, 0.621363, 0.61875, 0.436477, 0.59375, 0.62129, 0.61875, 0.835471, 0.59375, 0.62129, 0.59375, 0.835471, 0.61875, 1.07244, 0.59375, 1.07244, 0.61875, 1.325, 0.59375, 1.58547, 0.59375, 1.325, 0.61875, 1.58547, 0.61875, 1.58554, 0.41875, 0.46058, 0.41875, 0.764211, 0.876501, 1.63921, 1.11096, 0.675976, 1.02811, -0.25728, -0.304712, -0.25728, -0.304712, 0.436477, 0.61875),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 2, 4, 3, 4, 6, 5, 6, 8, 7, 8, 10, 9, 11, 13, 12, 13, 15, 14, 15, 17, 16, 17, 19, 18, 20, 22, 21, 23, 20, 24, 25, 23, 26, 27, 25, 28, 29, 31, 30, 32, 29, 33, 34, 32, 35, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 42, 46, 47, 45, 48, 49, 47, 50, 51, 49, 52, 53, 51, 54, 55, 53, 56, 57, 59, 58, 60, 61, 57, 62, 64, 63, 62, 66, 65, 67, 65, 68, 69, 68, 70, 71, 70, 72, 73, 75, 74, 76, 74, 77, 78, 77, 79, 80, 82, 81, 0, 1, 83, 2, 3, 1, 4, 5, 3, 6, 7, 5, 8, 9, 7, 11, 12, 84, 13, 14, 12, 15, 16, 14, 17, 18, 16, 20, 21, 24, 23, 24, 26, 25, 26, 28, 27, 28, 30, 29, 30, 33, 32, 33, 85, 34, 35, 37, 36, 37, 40, 39, 40, 86, 42, 43, 46, 45, 46, 48, 47, 48, 87, 49, 50, 52, 51, 52, 54, 53, 54, 56, 55, 56, 58, 57, 58, 88, 60, 57, 89, 62, 63, 66, 62, 65, 67, 67, 68, 69, 69, 70, 71, 71, 72, 90, 73, 74, 76, 76, 77, 78, 78, 79, 81, 80, 81, 79)
	],
	"morph_arrays":[]
}
surfaces/2 = {
	"material":SubResource(6),
	"primitive":4,
	"arrays":[
		Vector3Array(-3.79298, 1.35, 0.668689, -3.5, 1.35, 0.0, -3.44682, 1.35, 0.607795, -3.61928, 1.35, 1.31692, -3.28892, 1.35, 1.1971, -3.33566, 1.35, 1.92514, -3.03108, 1.35, 1.75003, -2.95074, 1.35, 2.47488, -3.03108, 1.35, 1.75003, -2.68115, 1.35, 2.24978, -2.4762, 1.35, 2.94941, -2.24975, 1.35, 2.68118, -1.92647, 1.35, 3.33434, -1.74999, 1.35, 3.03111, -1.31824, 1.35, 3.61796, -1.19707, 1.35, 3.28895, -0.670013, 1.35, 3.79165, -0.607764, 1.35, 3.44685, 0.0, 1.35, 3.85014, 0.0, 1.35, 3.50003, 0.0, 0.95, 3.65754, -0.520943, 0.95, 2.95442, 0.0, 0.95, 3.0, -1.02606, 0.95, 2.81908, -0.635145, 0.95, 3.60198, -1.25096, 0.95, 3.43697, -1.5, 0.95, 2.59808, -1.82878, 0.95, 3.16753, -1.92836, 0.95, 2.29813, -1.82878, 0.95, 3.16753, -2.35102, 0.95, 2.80185, -2.80183, 0.95, 2.35104, -1.92836, 0.95, 2.29813, -2.35102, 0.95, 2.80185, -2.29813, 0.95, 1.92836, -3.16751, 0.95, 1.82879, -2.59808, 0.95, 1.5, -3.43695, 0.95, 1.25098, -2.81908, 0.95, 1.02606, -2.81908, 0.95, 1.02606, -3.60196, 0.95, 0.635164, -2.95442, 0.95, 0.520946, -3.0, 0.95, 0.0, -3.60196, 0.95, 0.635164, -3.65753, 0.95, 0.0, 0.05, 1.4, 4.0, 0.05, 1.4, 3.0, 0.05, 1.4, 3.0, 0.05, -1.78814e-07, 3.0, 0.05, -1.78814e-07, 3.8, 0.05, -1.78814e-07, 3.0, 0.05, -1.78814e-07, 3.8, 0.05, 1.4, 4.0, -3.85147, 1.35, 0.0, -3.33566, 1.35, 1.92514, -1.92836, 0.95, 2.29813, -1.5, 0.95, 2.59808, -1.82878, 0.95, 3.16753, -3.43695, 0.95, 1.25098, -2.95442, 0.95, 0.520946),
		Vector3Array(0.714682, -0.687979, -0.126011, 0.0, -0.999969, 0.0, 0.0, -1.0, 0.0, 0.681936, -0.687979, -0.248177, 0.0, -1.0, 0.0, 0.628468, -0.687979, -0.362835, 0.0, -1.0, 0.0, 0.555895, -0.687979, -0.466445, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.466445, -0.687979, -0.555895, 0.0, -1.0, 0.0, 0.362835, -0.687979, -0.628468, 0.0, -1.0, 0.0, 0.248177, -0.687979, -0.681936, 0.0, -1.0, 0.0, 0.12595, -0.687979, -0.714682, 0.0, -0.999969, 0.0, 0.0632038, -0.686666, -0.724204, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.999969, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.999969, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.999969, 0.0, 0.0, -0.999969, 0.0, 0.0, 0.882595, 0.470107, 0.0, 1.0, 0.0, 0.0, 0.894406, -0.447188, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.894406, -0.447188, 0.0, 0.882595, 0.470107, 0.0, 1.0, 0.0, 0.724235, -0.686605, -0.0633259, 0.628468, -0.687979, -0.362835, 0.0, -0.999969, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.999969, 0.0, 0.0, -1.0, 0.0),
		FloatArray(-0.676347, -0.633816, -0.375277, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.711983, -0.546693, -0.44069, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.761886, -0.450462, -0.465419, 1.0, -0.981664, 0.0, -0.19062, 1.0, 0.818083, 0.353274, 0.453803, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.873388, 0.258667, 0.412657, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.922028, 0.167369, 0.349073, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.959679, 0.0786879, 0.269861, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.983328, -0.00866451, 0.181635, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.989329, -0.0523406, 0.135972, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, 0.981664, 0.0, 0.190621, -1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -0.664842, -0.670923, -0.328401, 1.0, 0.761886, 0.450462, 0.465418, -1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0, -0.981664, 0.0, -0.190621, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.169554, 0.0884642, 0.130588, -0.0476999, 0.151247, 0.0644226, 0.198303, 0.203783, 0.175436, 0.169258, 0.237086, 0.307588, 0.207822, 0.263626, 0.298858, 0.396725, 0.207822, 0.263626, 0.264305, 0.34466, 0.405791, 0.468486, 0.402259, 0.409897, 0.526249, 0.520689, 0.565575, 0.457355, 0.600734, 0.55175, 0.633521, 0.485592, 0.644464, 0.560724, 0.668621, 0.493749, 0.674735, 0.547284, 0.693082, 0.481581, 0.694466, 0.695946, 0.727288, 0.58298, 0.736489, 0.57255, 0.721965, 0.575988, 0.669355, 0.708663, 0.632224, 0.700138, 0.73419, 0.551785, 0.555773, 0.670631, 1.0258, 0.511106, 0.555773, 0.670631, 0.377918, 0.621037, 0.255212, 0.552865, 0.0257972, 0.511106, 0.377918, 0.621037, 0.128294, 0.455189, 0.204789, 0.468185, 0.129705, 0.385732, 0.17451, 0.36957, 0.121722, 0.304845, 0.121722, 0.304845, 0.151291, 0.260017, 0.110892, 0.214986, 0.0987489, 0.118885, 0.151291, 0.260017, 0.131174, 0.142845, 0.668664, 0.550484, 0.724211, 0.362822, 0.724211, 0.362822, 0.765578, 1.00964, 0.712467, 1.15977, 0.765578, 1.00964, 0.712467, 1.15977, 0.668664, 0.550484, 0.14564, -0.0348921, 0.237086, 0.307588, 1.0258, 0.511106, 0.73419, 0.551785, 0.555773, 0.670631, 0.17451, 0.36957, 0.110892, 0.214986),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 4, 2, 5, 6, 4, 7, 9, 8, 10, 11, 9, 12, 13, 11, 14, 15, 13, 16, 17, 15, 18, 19, 17, 20, 22, 21, 23, 25, 24, 26, 27, 25, 28, 30, 29, 31, 33, 32, 34, 36, 35, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 49, 49, 47, 50, 48, 51, 45, 52, 0, 1, 53, 3, 2, 0, 5, 4, 3, 7, 8, 54, 10, 9, 7, 12, 11, 10, 14, 13, 12, 16, 15, 14, 18, 17, 16, 20, 21, 24, 23, 24, 21, 26, 25, 23, 55, 57, 56, 31, 32, 34, 34, 35, 31, 36, 37, 35, 39, 40, 58, 42, 43, 59, 45, 46, 52, 48, 49, 48, 47, 48, 46, 51, 52, 49)
	],
	"morph_arrays":[]
}

[sub_resource id=8 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.0);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.4000000059604645);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=9 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(8)
shader_param/texture_0 = ExtResource(4)

[sub_resource id=10 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(5)
shader_param/texture_0 = ExtResource(3)

[sub_resource id=11 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=12 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(11)
shader_param/texture_0 = ExtResource(5)

[sub_resource id=13 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.0);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=14 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(13)
shader_param/texture_0 = ExtResource(6)

[sub_resource id=15 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node1_in0_basecolor = node0_out0_color;
	float node1_in1_subsurface = float(0.0);
	vec3 node1_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node1_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in4_metallic = float(0.0);
	float node1_in5_specular = float(0.5);
	float node1_in6_speculartint = float(0.0);
	float node1_in7_roughness = float(0.5);
	float node1_in8_anisotropic = float(0.0);
	float node1_in9_anisotropicrotation = float(0.0);
	float node1_in10_sheen = float(0.0);
	float node1_in11_sheentint = float(0.5);
	float node1_in12_clearcoat = float(0.0);
	float node1_in13_clearcoatroughness = float(0.029999999329447746);
	float node1_in14_ior = float(1.4500000476837158);
	float node1_in15_transmission = float(0.0);
	float node1_in16_transmissionroughness = float(0.0);
	vec4 node1_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node1_in18_alpha = float(1.0);
	vec3 node1_in19_normal = NORMAL;
	vec3 node1_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node1_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_sss_strength;
	float node1_bsdf_out3_specular;
	float node1_bsdf_out2_metallic;
	float node1_bsdf_out4_roughness;
	float node1_bsdf_out5_clearcoat;
	float node1_bsdf_out6_clearcoat_gloss;
	float node1_bsdf_out7_anisotropy;
	float node1_bsdf_out8_transmission;
	float node1_bsdf_out9_ior;
	
	node_bsdf_principled(node1_in0_basecolor, node1_in1_subsurface,
		node1_in3_subsurfacecolor, node1_in4_metallic, node1_in5_specular,
		node1_in7_roughness, node1_in12_clearcoat, node1_in13_clearcoatroughness,
		node1_in8_anisotropic, node1_in15_transmission, node1_in14_ior,
		node1_bsdf_out0_albedo, node1_bsdf_out1_sss_strength, node1_bsdf_out2_metallic,
		node1_bsdf_out3_specular, node1_bsdf_out4_roughness, node1_bsdf_out5_clearcoat,
		node1_bsdf_out6_clearcoat_gloss, node1_bsdf_out7_anisotropy,
		node1_bsdf_out8_transmission, node1_bsdf_out9_ior);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SSS_STRENGTH = node1_bsdf_out1_sss_strength;
	SPECULAR = node1_bsdf_out3_specular;
	METALLIC = node1_bsdf_out2_metallic;
	ROUGHNESS = node1_bsdf_out4_roughness;
	CLEARCOAT = node1_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node1_bsdf_out6_clearcoat_gloss;
	NORMAL = node1_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node1_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node1_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node1_bsdf_out7_anisotropy;
}
"

[sub_resource id=16 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(15)
shader_param/texture_0 = ExtResource(2)

[sub_resource id=17 type="ArrayMesh"]

resource_name = "Cube001"
surfaces/0 = {
	"material":SubResource(9),
	"primitive":4,
	"arrays":[
		Vector3Array(-7.0, 0.0, -7.0, 5.0, 0.0, 5.0, 5.0, 0.0, -7.0, 4.99998, 0.0, 1.0, 5.5, 0.0, -1.0, 4.99998, 0.0, -1.0, -10.5, 0.0, 8.0, -7.5, 0.0, 0.0, -7.5, 0.0, -2.0, 8.9, 2.5, 1.5, 10.1, 2.5, 2.0, 8.9, 2.5, 2.0, 10.1, 0.0, 1.5, 8.9, 0.0, 2.0, 10.1, 0.0, 2.0, 6.3, 0.0, 4.5, 5.50538, 0.0, 4.3, 6.3, 0.0, 4.3, 8.2, 0.0, 4.5, 7.5, 0.0, 4.3, 7.5, 0.0, 4.5, 5.5, 0.0, 9.0, 8.2, 0.0, 4.5, 7.5, 0.0, 4.5, 9.0, 0.0, -5.0, 6.75552, 0.0, -2.0, 7.95552, 0.0, -2.0, 14.9, 2.5, 1.5, 16.1, 2.5, 2.0, 14.9, 2.5, 2.0, 16.1, 0.0, 1.5, 14.9, 0.0, 2.0, 16.1, 0.0, 2.0, 12.3, 0.0, 4.5, 11.5054, 0.0, 4.3, 12.3, 0.0, 4.3, 14.2, 0.0, 4.5, 13.5, 0.0, 4.3, 13.5, 0.0, 4.5, 11.5, 0.0, 9.0, 14.2, 0.0, 4.5, 13.5, 0.0, 4.5, 20.9, 2.5, 1.5, 22.1, 2.5, 2.0, 20.9, 2.5, 2.0, 22.1, 0.0, 1.5, 20.9, 0.0, 2.0, 22.1, 0.0, 2.0, 17.5, 0.0, 9.0, 20.2, 0.0, 4.5, 19.5, 0.0, 4.5, 5.0, 0.0, -13.0, 2.75552, 0.0, -7.5, 3.95552, 0.0, -7.5, 22.1, 0.0, 1.5, 23.0, 0.0, -1.5, 20.0, 0.0, -1.5, -7.0, 0.0, 5.0, 5.5, 0.0, 1.0, -7.5, 0.0, -12.561, -10.5, 0.0, -12.561, -7.5, 0.0, -2.0, -10.5, 0.0, -12.561, -10.5, 0.0, 8.0, -7.5, 0.0, 8.0, -7.5, 0.0, 0.0, -7.0, 0.0, 0.0, -7.0, 0.0, -2.0, 8.9, 2.5, 1.5, 10.1, 2.5, 1.5, 10.1, 2.5, 2.0, 8.9, 0.0, 1.5, 5.50538, 0.0, 4.5, 8.0, 0.0, 4.3, 6.3, 0.0, 4.5, 5.50538, 0.0, 4.5, 5.5, 0.0, 9.0, 11.0, 0.0, 9.0, 11.0, 0.0, 2.0, 10.1, 0.0, 2.0, 10.1, 0.0, 2.0, 8.9, 0.0, 2.0, 8.2, 0.0, 4.5, 8.9, 0.0, 2.0, 8.2, 0.0, 2.00755, 8.2, 0.0, 4.5, 5.5, 0.0, 2.0, 5.50538, 0.0, 4.3, 6.3, 0.0, 4.3, 8.0, 0.0, 4.3, 8.0, 0.0, 2.0, 7.5, 0.0, 4.3, 6.3, 0.0, 4.5, 7.95552, 0.0, -2.0, 9.0, 0.0, -2.0, 9.0, 0.0, -5.0, 9.0, 0.0, -5.0, 5.5, 0.0, -5.0, 6.75552, 0.0, -2.0, 5.5, 0.0, -2.00001, 6.75552, 0.0, -1.5, 7.95552, 0.0, -1.5, 7.95552, 0.0, -2.0, 14.9, 2.5, 1.5, 16.1, 2.5, 1.5, 16.1, 2.5, 2.0, 14.9, 0.0, 1.5, 11.5054, 0.0, 4.5, 14.0, 0.0, 4.3, 12.3, 0.0, 4.5, 11.5054, 0.0, 4.5, 11.5, 0.0, 9.0, 17.0, 0.0, 9.0, 17.0, 0.0, 2.0, 16.1, 0.0, 2.0, 14.9, 0.0, 2.0, 14.2, 0.0, 2.00755, 11.5, 0.0, 2.0, 11.5054, 0.0, 4.3, 12.3, 0.0, 4.3, 14.0, 0.0, 4.3, 14.0, 0.0, 2.0, 13.5, 0.0, 4.3, 12.3, 0.0, 4.5, 20.9, 2.5, 1.5, 22.1, 2.5, 1.5, 22.1, 2.5, 2.0, 20.9, 0.0, 1.5, 18.3, 0.0, 4.5, 17.5054, 0.0, 4.5, 17.5, 0.0, 9.0, 23.0, 0.0, 9.0, 23.0, 0.0, 2.0, 22.1, 0.0, 2.0, 20.9, 0.0, 2.0, 20.2, 0.0, 2.00755, 17.5, 0.0, 2.0, 17.5054, 0.0, 4.3, 18.3, 0.0, 4.3, 20.0, 0.0, 4.3, 20.0, 0.0, 2.0, 19.5, 0.0, 4.3, 18.3, 0.0, 4.5, 5.0, 0.0, -7.5, -7.0, 0.0, -13.0, -7.0, 0.0, -7.5, 2.75552, 0.0, -7.5, 2.75552, 0.0, -7.0, 3.95552, 0.0, -7.0, 3.95552, 0.0, -7.5, 17.0, 0.0, -1.5, 14.0372, 0.0, -1.5, 16.1, 0.0, 1.5, 10.5, 0.0, -1.5, 10.5, 0.0, 1.5, 10.5, 0.0, 1.5, 10.5, 0.0, -1.5, 10.1, 0.0, 1.5, 8.5, 0.0, -1.5, 5.5, 0.0, -1.5, 5.5, 0.0, 1.5, 17.0, 0.0, 1.5, 16.1, 0.0, 1.5, 14.0372, 0.0, -1.5, 14.9, 0.0, 1.5, 8.5, 0.0, -1.5, 8.9, 0.0, 1.5, 10.1, 0.0, 1.5, 14.0372, 0.0, 1.5, 14.9, 0.0, 1.5, 17.0, 0.0, 1.5, 20.0, 0.0, 1.5, 20.0, 0.0, -1.5, 20.0, 0.0, 1.5, 20.9, 0.0, 1.5, 20.9, 0.0, 1.5, 22.1, 0.0, 1.5, 20.0, 0.0, -1.5, 23.0, 0.0, 1.5, 27.0, 0.0, 1.5, 27.0, 0.0, -1.5, 28.0, 0.0, 1.5, 28.0, 0.0, -1.5, 28.0, 0.0, 1.5, 38.0, 0.0, 1.5, 38.0, 0.0, -1.5, 23.0, 0.0, 1.5, 28.0, 0.0, -1.5, 23.0, 0.0, -1.5),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, -1.98682e-07, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -2.38577e-07, 1.0, 1.0, 0.0, -8.12783e-07, 1.0, 1.0, 0.0, -8.35525e-08, 1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -6.26232e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.54587e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, -1.98682e-07, 9.9341e-08, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.54587e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -6.14595e-08, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, 9.93411e-08, 1.0, 1.0, 0.0, 9.93411e-08, 1.0, 1.0, 0.0, 9.93411e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -6.14595e-08, 1.0, 1.0, 0.0, -6.45062e-08, 1.0, 1.0, 0.0, 5.85042e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -6.14595e-08, 1.0, 1.0, 0.0, -6.45062e-08, 1.0, 1.0, 0.0, 5.85042e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-5.37393, -3.52341, 0.626068, 2.47659, 0.626068, -3.52341, 0.62606, 0.476592, 0.876069, -0.523408, 0.62606, -0.523408, -7.12393, 3.97659, -5.62393, -0.0234079, -5.62393, -1.02341, 1.55584, 1.3625, 2.15584, 1.6125, 1.55584, 1.6125, 3.17607, 0.726592, 2.57607, 0.976592, 3.17607, 0.976592, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -0.594086, 2.96226, 0.755914, 0.712264, 0.405914, 0.712264, 1.34862, -0.687498, 0.22638, 0.8125, 0.826381, 0.8125, 1.55584, 1.3625, 2.15584, 1.6125, 1.55584, 1.6125, 3.17607, 0.726592, 2.57607, 0.976592, 3.17607, 0.976592, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -0.594086, 2.96226, 0.755914, 0.712264, 0.405914, 0.712264, 1.55584, 1.3625, 2.15584, 1.6125, 1.55584, 1.6125, 3.17607, 0.726592, 2.57607, 0.976592, 3.17607, 0.976592, -0.594086, 2.96226, 0.755914, 0.712264, 0.405914, 0.712264, 2.41112, -1.625, 1.28888, 1.125, 1.88888, 1.125, 2.19852, 1.1, 2.64851, -0.4, 1.14851, -0.4, -5.37393, 2.47659, 0.876068, 0.476592, -5.62393, -6.30388, -7.12393, -6.30388, -5.62393, -1.02341, -7.12393, -6.30388, -7.12393, 3.97659, -5.62393, 3.97659, -5.62393, -0.0234079, -5.37393, -0.0234079, -5.37393, -1.02341, 1.55584, 1.3625, 2.15584, 1.3625, 2.15584, 1.6125, 2.57607, 0.726592, 0.0, 1.0, 0.0, 1.0, -0.194086, 0.712264, -0.591398, 0.712264, -0.594086, 2.96226, 2.15591, 2.96226, 2.15591, -0.537736, 1.70591, -0.537736, 1.70591, -0.537736, 1.10591, -0.537736, 0.755914, 0.712264, 1.10591, -0.537736, 0.755914, -0.533961, 0.755914, 0.712264, -0.594086, -0.537736, -0.591398, 0.612264, -0.194086, 0.612264, 0.655914, 0.612264, 0.655914, -0.537736, 0.405914, 0.612264, -0.194086, 0.712264, 0.826381, 0.8125, 1.34862, 0.812499, 1.34862, -0.687498, 1.34862, -0.687498, -0.401381, -0.687499, 0.22638, 0.8125, -0.401381, 0.812499, 0.22638, 1.0625, 0.826381, 1.0625, 0.826381, 0.8125, 1.55584, 1.3625, 2.15584, 1.3625, 2.15584, 1.6125, 2.57607, 0.726592, 0.0, 1.0, 0.0, 1.0, -0.194086, 0.712264, -0.591398, 0.712264, -0.594086, 2.96226, 2.15591, 2.96226, 2.15591, -0.537736, 1.70591, -0.537736, 1.10591, -0.537736, 0.755914, -0.533961, -0.594086, -0.537736, -0.591398, 0.612264, -0.194086, 0.612264, 0.655914, 0.612264, 0.655914, -0.537736, 0.405914, 0.612264, -0.194086, 0.712264, 1.55584, 1.3625, 2.15584, 1.3625, 2.15584, 1.6125, 2.57607, 0.726592, -0.194086, 0.712264, -0.591398, 0.712264, -0.594086, 2.96226, 2.15591, 2.96226, 2.15591, -0.537736, 1.70591, -0.537736, 1.10591, -0.537736, 0.755914, -0.533961, -0.594086, -0.537736, -0.591398, 0.612264, -0.194086, 0.612264, 0.655914, 0.612264, 0.655914, -0.537736, 0.405914, 0.612264, -0.194086, 0.712264, 2.41112, 1.125, -3.58888, -1.625, -3.58888, 1.125, 1.28888, 1.125, 1.28888, 1.375, 1.88888, 1.375, 1.88888, 1.125, -0.351488, -0.4, -1.8329, -0.4, -0.801476, 1.1, -3.60149, -0.4, -3.60149, 1.1, -3.60149, 1.1, -3.60149, -0.4, -3.80149, 1.1, -4.60149, -0.4, -6.10149, -0.4, -6.10149, 1.1, -0.351488, 1.1, -0.801476, 1.1, -1.8329, -0.4, -1.40148, 1.1, -4.60149, -0.4, -4.40149, 1.1, -3.80149, 1.1, -1.8329, 1.1, -1.40148, 1.1, -0.351488, 1.1, 1.14851, 1.1, 1.14851, -0.4, 1.14851, 1.1, 1.59852, 1.1, 1.59852, 1.1, 2.19852, 1.1, 1.14851, -0.4, 2.64851, 1.1, 4.64851, 1.1, 4.64851, -0.4, 5.14851, 1.1, 5.14851, -0.4, 5.14851, 1.1, 10.1485, 1.1, 10.1485, -0.4, 2.64851, 1.1, 5.14851, -0.4, 2.64851, -0.4),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 0, 1, 57, 3, 4, 58, 59, 61, 60, 62, 8, 6, 63, 65, 64, 7, 8, 66, 66, 8, 67, 68, 70, 69, 12, 13, 71, 15, 16, 72, 18, 19, 73, 74, 76, 75, 21, 22, 77, 77, 22, 78, 78, 22, 79, 80, 82, 81, 83, 85, 84, 86, 88, 87, 89, 91, 90, 90, 88, 86, 91, 88, 90, 23, 88, 91, 23, 92, 88, 23, 21, 92, 93, 95, 94, 96, 98, 97, 97, 98, 99, 98, 101, 100, 98, 102, 101, 103, 105, 104, 30, 31, 106, 33, 34, 107, 36, 37, 108, 109, 111, 110, 39, 40, 112, 112, 40, 113, 113, 40, 114, 114, 40, 115, 115, 40, 116, 117, 119, 118, 120, 122, 121, 121, 119, 117, 122, 119, 121, 41, 119, 122, 41, 123, 119, 41, 39, 123, 124, 126, 125, 45, 46, 127, 128, 130, 129, 48, 49, 131, 131, 49, 132, 132, 49, 133, 133, 49, 134, 134, 49, 135, 136, 138, 137, 139, 141, 140, 140, 138, 136, 141, 138, 140, 50, 138, 141, 50, 142, 138, 50, 48, 142, 53, 51, 143, 51, 52, 144, 144, 52, 145, 146, 148, 147, 146, 149, 148, 150, 152, 151, 151, 154, 153, 155, 157, 156, 158, 160, 159, 56, 161, 150, 162, 164, 163, 156, 157, 165, 158, 166, 160, 167, 166, 158, 154, 151, 168, 168, 151, 169, 152, 150, 161, 170, 172, 171, 173, 56, 174, 175, 177, 176, 178, 180, 179, 179, 182, 181, 179, 180, 182, 183, 185, 184, 54, 55, 186, 183, 187, 185, 180, 178, 188)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(10),
	"primitive":4,
	"arrays":[
		Vector3Array(-10.5, 3.0, -12.561, -7.5, 0.0, -12.561, -7.5, 3.0, -12.561, -7.0, 2.5, -2.0, -7.0, 3.5, -7.0, -7.0, 3.5, 5.0, 5.5, 0.0, -1.0, 4.99998, 2.5, -1.0, 4.99998, 0.0, -1.0, 5.5, 2.5, 1.0, 5.5, 3.0, -1.5, 5.5, 3.0, 1.5, 4.99998, 2.5, -1.0, 5.5, 2.5, 1.0, 4.99998, 2.5, 1.0, -7.0, 2.5, 0.0, -7.5, 0.0, 0.0, -7.5, 2.5, 0.0, -7.0, 2.5, -2.0, -7.5, 2.5, 0.0, -7.5, 2.5, -2.0, -7.5, 2.5, -2.0, -7.5, 2.5, 0.0, -7.5, 3.0, 8.0, 6.3, 2.5, 4.5, 7.5, 2.5, 4.5, 8.2, 3.0, 4.5, -7.0, 0.0, -2.0, -7.5, 2.5, -2.0, -7.5, 0.0, -2.0, 5.5, 0.0, 1.0, 5.5, 3.0, 1.5, 5.5, 0.0, 1.5, 5.5, 3.0, -1.5, 5.5, 0.0, -1.0, 5.5, 0.0, -1.5, 5.5, 0.0, 1.0, 4.99998, 2.5, 1.0, 5.5, 2.5, 1.0, 8.9, 0.0, 1.5, 8.9, 2.5, 2.0, 8.9, 0.0, 2.0, 10.1, 2.5, 1.5, 10.1, 0.0, 2.0, 10.1, 2.5, 2.0, 23.0, 3.0, 1.5, 23.0, 0.0, 1.5, 22.1, 2.5, 1.5, 5.0, 0.0, 5.0, -7.0, 3.5, 5.0, 5.0, 3.5, 5.0, -10.5, 3.0, -12.561, -10.5, 0.0, 8.0, -10.5, 0.0, -12.561, 11.0, 3.0, 9.0, 5.5, 0.0, 9.0, 5.5, 3.0, 9.0, 7.5, 2.5, 4.5, 7.5, 0.0, 4.3, 7.5, 0.0, 4.5, 8.2, 3.0, 4.5, 8.2, 0.0, 2.00755, 8.2, 3.0, 2.00755, 5.50538, 0.0, 4.3, 6.3, 2.5, 4.3, 6.3, 0.0, 4.3, 7.5, 2.5, 4.3, 8.0, 0.0, 4.3, 7.5, 0.0, 4.3, 10.1, 2.5, 2.0, 11.0, 3.0, 2.0, 8.2, 3.0, 2.00755, 6.3, 0.0, 4.3, 6.3, 2.5, 4.5, 6.3, 0.0, 4.5, 5.50538, 0.0, 4.5, 5.5, 3.0, 9.0, 5.5, 0.0, 9.0, 5.50538, 0.0, 4.3, 5.5, 3.0, 2.0, 5.50538, 3.0, 4.3, 8.0, 3.0, 4.3, 8.0, 0.0, 2.0, 8.0, 0.0, 4.3, 5.5, 0.0, 2.0, 8.0, 3.0, 2.0, 5.5, 3.0, 2.0, 8.0, 3.0, 4.3, 6.3, 2.5, 4.5, 7.5, 2.5, 4.3, 7.5, 2.5, 4.5, 4.99998, 2.5, -1.0, 4.99998, 2.5, 1.0, 5.0, 3.5, 5.0, 11.0, 0.0, 9.0, 11.0, 3.0, 2.0, 11.0, 0.0, 2.0, 7.95552, 0.0, -1.5, 7.95552, 2.5, -2.0, 7.95552, 0.0, -2.0, 7.95552, 2.5, -1.5, 6.75552, 2.5, -2.0, 7.95552, 2.5, -2.0, 6.75552, 2.5, -1.5, 6.75552, 0.0, -2.0, 6.75552, 2.5, -2.0, 6.75552, 0.0, -2.0, 5.5, 3.0, -2.00001, 6.75552, 2.5, -2.0, 6.75552, 2.5, -2.0, 9.0, 3.0, -2.0, 7.95552, 2.5, -2.0, 9.0, 3.0, -2.0, 7.95552, 0.0, -2.0, 7.95552, 2.5, -2.0, 5.5, 0.0, -5.0, 5.5, 3.0, -2.00001, 5.5, 0.0, -2.00001, 9.0, 3.0, -5.0, 5.5, 0.0, -5.0, 9.0, 0.0, -5.0, 9.0, 3.0, -5.0, 9.0, 0.0, -2.0, 9.0, 3.0, -2.0, 12.3, 2.5, 4.5, 13.5, 2.5, 4.5, 14.2, 3.0, 4.5, 14.9, 0.0, 1.5, 14.9, 2.5, 2.0, 14.9, 0.0, 2.0, 16.1, 2.5, 1.5, 16.1, 0.0, 2.0, 16.1, 2.5, 2.0, 17.0, 3.0, 9.0, 11.5, 0.0, 9.0, 11.5, 3.0, 9.0, 13.5, 2.5, 4.5, 13.5, 0.0, 4.3, 13.5, 0.0, 4.5, 14.2, 3.0, 4.5, 14.2, 0.0, 2.00755, 14.2, 3.0, 2.00755, 11.5054, 0.0, 4.3, 12.3, 2.5, 4.3, 12.3, 0.0, 4.3, 13.5, 2.5, 4.3, 14.0, 0.0, 4.3, 13.5, 0.0, 4.3, 16.1, 2.5, 2.0, 17.0, 3.0, 2.0, 14.2, 3.0, 2.00755, 12.3, 0.0, 4.3, 12.3, 2.5, 4.5, 12.3, 0.0, 4.5, 11.5054, 0.0, 4.5, 11.5, 3.0, 9.0, 11.5, 0.0, 9.0, 11.5054, 0.0, 4.3, 11.5, 3.0, 2.0, 11.5054, 3.0, 4.3, 14.0, 3.0, 4.3, 14.0, 0.0, 2.0, 14.0, 0.0, 4.3, 11.5, 0.0, 2.0, 14.0, 3.0, 2.0, 11.5, 3.0, 2.0, 14.0, 3.0, 4.3, 12.3, 2.5, 4.5, 13.5, 2.5, 4.3, 13.5, 2.5, 4.5, 17.0, 0.0, 9.0, 17.0, 3.0, 2.0, 17.0, 0.0, 2.0, 18.3, 2.5, 4.5, 19.5, 2.5, 4.5, 20.2, 3.0, 4.5, 20.9, 0.0, 1.5, 20.9, 2.5, 2.0, 20.9, 0.0, 2.0, 22.1, 2.5, 1.5, 22.1, 0.0, 2.0, 22.1, 2.5, 2.0, 23.0, 3.0, 9.0, 17.5, 0.0, 9.0, 17.5, 3.0, 9.0, 19.5, 2.5, 4.5, 19.5, 0.0, 4.3, 19.5, 0.0, 4.5, 20.2, 3.0, 4.5, 20.2, 0.0, 2.00755, 20.2, 3.0, 2.00755, 17.5054, 0.0, 4.3, 18.3, 2.5, 4.3, 18.3, 0.0, 4.3, 19.5, 2.5, 4.3, 20.0, 0.0, 4.3, 19.5, 0.0, 4.3, 22.1, 2.5, 2.0, 23.0, 3.0, 2.0, 20.2, 3.0, 2.00755, 17.5054, 0.0, 4.5, 17.5, 3.0, 9.0, 17.5, 0.0, 9.0, 17.5054, 0.0, 4.3, 17.5, 3.0, 2.0, 17.5054, 3.0, 4.3, 20.0, 3.0, 4.3, 20.0, 0.0, 2.0, 20.0, 0.0, 4.3, 17.5, 0.0, 2.0, 20.0, 3.0, 2.0, 17.5, 3.0, 2.0, 20.0, 3.0, 4.3, 18.3, 2.5, 4.5, 19.5, 2.5, 4.3, 19.5, 2.5, 4.5, 23.0, 0.0, 9.0, 23.0, 3.0, 2.0, 23.0, 0.0, 2.0, 3.95552, 0.0, -7.0, 3.95552, 2.5, -7.5, 3.95552, 0.0, -7.5, 3.95552, 2.5, -7.0, 2.75552, 2.5, -7.5, 3.95552, 2.5, -7.5, 2.75552, 2.5, -7.0, 2.75552, 0.0, -7.5, 2.75552, 2.5, -7.5, -7.0, 0.0, -13.0, -7.0, 3.0, -7.5, -7.0, 0.0, -7.5, 5.0, 3.0, -13.0, -7.0, 0.0, -13.0, 5.0, 0.0, -13.0, -7.0, 3.0, -7.5, 5.0, 3.0, -7.5, 2.75552, 2.5, -7.5, 23.0, 0.0, -1.5, 27.0, 0.0, -1.5, 23.0, 3.0, -1.5, 2.75552, 2.5, -7.0, 3.95552, 2.5, -7.0, 5.0, 3.5, -7.0, 28.0, 3.0, 1.5, 38.0, 0.0, 1.5, 28.0, 0.0, 1.5, 27.0, 3.0, 1.5, 27.0, 0.0, 1.5, 27.0, 0.0, -1.5, 28.0, 3.0, -1.5, 27.0, 3.0, -1.5, 38.0, 3.0, -1.5, 38.0, 0.0, 1.5, 38.0, 3.0, 1.5, 28.0, 0.0, -1.5, 38.0, 3.0, -1.5, 18.3, 0.0, 4.3, 18.3, 2.5, 4.5, 18.3, 0.0, 4.5, 5.5, 1.19209e-07, -9.85, 5.0, 2.5, -9.85, 5.0, 1.19209e-07, -9.85, 5.5, 2.5, -9.85, 5.0, 2.5, -8.65, 5.0, 2.5, -9.85, 5.5, 2.5, -8.65, 5.0, 1.19209e-07, -8.65, 5.0, 2.5, -8.65, 5.5, 1.19209e-07, -9.85, 5.0, 1.19209e-07, -8.65, 5.5, 1.19209e-07, -8.65, 5.0, 2.5, -9.85, 5.0, 2.5, -8.65, 5.0, 3.0, -7.5, -10.5, 3.0, -12.561, -10.5, 0.0, -12.561, -7.5, 0.0, -12.561, -7.0, 3.5, 5.0, -7.0, 0.0, 5.0, -7.0, 2.5, 0.0, -7.0, 0.0, 0.0, -7.0, 0.0, -2.0, -7.0, 0.0, -7.0, -7.0, 2.5, -2.0, -7.0, 0.0, -7.0, -7.0, 3.5, -7.0, -7.0, 2.5, -2.0, -7.0, 3.5, 5.0, -7.0, 2.5, 0.0, -7.0, 2.5, -2.0, 5.5, 0.0, -1.0, 5.5, 2.5, -1.0, 4.99998, 2.5, -1.0, 5.5, 2.5, 1.0, 5.5, 2.5, -1.0, 5.5, 3.0, -1.5, 5.5, 2.5, -1.0, -7.0, 0.0, 0.0, -7.0, 2.5, 0.0, -7.5, 2.5, 0.0, -7.5, 0.0, 0.0, -7.5, 0.0, 8.0, -7.5, 3.0, -12.561, -7.5, 0.0, -12.561, -7.5, 2.5, -2.0, -7.5, 0.0, -12.561, -7.5, 0.0, -2.0, -7.5, 2.5, -2.0, -7.5, 2.5, 0.0, -7.5, 0.0, 8.0, -7.5, 3.0, 8.0, -7.5, 3.0, -12.561, -7.5, 2.5, -2.0, -7.5, 3.0, 8.0, 5.50538, 3.0, 4.5, 5.50538, 0.0, 4.5, 6.3, 2.5, 4.5, 6.3, 0.0, 4.5, 7.5, 0.0, 4.5, 8.2, 0.0, 4.5, 5.50538, 3.0, 4.5, 6.3, 2.5, 4.5, 8.2, 3.0, 4.5, -7.0, 0.0, -2.0, -7.0, 2.5, -2.0, -7.5, 2.5, -2.0, 5.5, 0.0, 1.0, 5.5, 2.5, 1.0, 5.5, 3.0, 1.5, 5.5, 3.0, -1.5, 5.5, 2.5, -1.0, 5.5, 0.0, -1.0, 4.99998, 0.0, 1.0, 8.9, 2.5, 1.5, 10.1, 0.0, 1.5, 10.5, 0.0, 1.5, 10.1, 0.0, 1.5, 10.1, 2.5, 1.5, 8.9, 2.5, 1.5, 8.9, 0.0, 1.5, 5.5, 0.0, 1.5, 14.0372, 0.0, 1.5, 10.5, 0.0, 1.5, 10.5, 3.0, 1.5, 10.1, 2.5, 1.5, 8.9, 2.5, 1.5, 5.5, 0.0, 1.5, 8.5, 3.0, 1.5, 5.5, 0.0, 1.5, 5.5, 3.0, 1.5, 8.5, 3.0, 1.5, 14.9, 0.0, 1.5, 14.0372, 0.0, 1.5, 14.9, 2.5, 1.5, 14.9, 2.5, 1.5, 14.0372, 0.0, 1.5, 14.0372, 3.0, 1.5, 10.1, 2.5, 1.5, 8.9, 2.5, 1.5, 8.5, 3.0, 1.5, 8.5, 3.0, 1.5, 10.5, 3.0, 1.5, 10.1, 2.5, 1.5, 14.0372, 3.0, 1.5, 14.9, 2.5, 1.5, 14.0372, 3.0, 1.5, 16.1, 2.5, 1.5, 17.0, 0.0, 1.5, 16.1, 0.0, 1.5, 16.1, 2.5, 1.5, 20.0, 0.0, 1.5, 17.0, 0.0, 1.5, 17.0, 3.0, 1.5, 17.0, 0.0, 1.5, 16.1, 2.5, 1.5, 17.0, 3.0, 1.5, 14.0372, 3.0, 1.5, 17.0, 3.0, 1.5, 16.1, 2.5, 1.5, 20.0, 3.0, 1.5, 20.9, 0.0, 1.5, 20.0, 0.0, 1.5, 20.9, 2.5, 1.5, 20.9, 2.5, 1.5, 20.0, 0.0, 1.5, 20.0, 3.0, 1.5, 23.0, 3.0, 1.5, 27.0, 3.0, 1.5, 27.0, 0.0, 1.5, 20.0, 3.0, 1.5, 23.0, 3.0, 1.5, 20.9, 2.5, 1.5, 22.1, 2.5, 1.5, 20.9, 2.5, 1.5, 23.0, 3.0, 1.5, 23.0, 0.0, 1.5, 23.0, 0.0, 1.5, 22.1, 0.0, 1.5, 22.1, 2.5, 1.5, -7.0, 0.0, 5.0, -10.5, 3.0, 8.0, 11.0, 0.0, 9.0, 7.5, 2.5, 4.3, 8.2, 0.0, 4.5, 5.50538, 3.0, 4.3, 10.1, 2.5, 2.0, 10.1, 0.0, 2.0, 11.0, 0.0, 2.0, 8.2, 3.0, 2.00755, 8.2, 0.0, 2.00755, 8.9, 2.5, 2.0, 8.2, 0.0, 2.00755, 8.9, 0.0, 2.0, 8.9, 2.5, 2.0, 10.1, 2.5, 2.0, 11.0, 0.0, 2.0, 11.0, 3.0, 2.0, 8.2, 3.0, 2.00755, 8.9, 2.5, 2.0, 10.1, 2.5, 2.0, 6.3, 2.5, 4.3, 5.50538, 0.0, 4.5, 5.50538, 3.0, 4.5, 5.5, 3.0, 9.0, 5.50538, 0.0, 4.3, 5.5, 0.0, 2.0, 5.5, 3.0, 2.0, 8.0, 3.0, 2.0, 5.5, 0.0, 2.0, 8.0, 0.0, 2.0, 8.0, 3.0, 2.0, 6.3, 2.5, 4.3, 4.99998, 2.5, 1.0, 4.99998, 0.0, 1.0, 5.0, 0.0, 5.0, 5.0, 3.5, -7.0, 5.0, 0.0, -7.0, 4.99998, 2.5, -1.0, 5.0, 0.0, -7.0, 4.99998, 0.0, -1.0, 4.99998, 2.5, -1.0, 4.99998, 2.5, 1.0, 5.0, 0.0, 5.0, 5.0, 3.5, 5.0, 5.0, 3.5, -7.0, 11.0, 3.0, 9.0, 7.95552, 2.5, -1.5, 6.75552, 2.5, -1.5, 6.75552, 0.0, -1.5, 6.75552, 0.0, -2.0, 5.5, 0.0, -2.00001, 5.5, 3.0, -2.00001, 6.75552, 2.5, -2.0, 5.5, 3.0, -2.00001, 9.0, 3.0, -2.0, 9.0, 3.0, -2.0, 9.0, 0.0, -2.0, 7.95552, 0.0, -2.0, 5.5, 0.0, -5.0, 5.5, 3.0, -5.0, 5.5, 3.0, -2.00001, 9.0, 3.0, -5.0, 5.5, 3.0, -5.0, 5.5, 0.0, -5.0, 9.0, 3.0, -5.0, 9.0, 0.0, -5.0, 9.0, 0.0, -2.0, 11.5054, 3.0, 4.5, 11.5054, 0.0, 4.5, 12.3, 0.0, 4.5, 13.5, 0.0, 4.5, 14.2, 0.0, 4.5, 14.9, 2.5, 1.5, 16.1, 0.0, 1.5, 17.0, 0.0, 9.0, 13.5, 2.5, 4.3, 14.2, 0.0, 4.5, 11.5054, 3.0, 4.3, 16.1, 2.5, 2.0, 16.1, 0.0, 2.0, 17.0, 0.0, 2.0, 14.2, 3.0, 2.00755, 14.2, 0.0, 2.00755, 14.9, 2.5, 2.0, 14.2, 0.0, 2.00755, 14.9, 0.0, 2.0, 14.9, 2.5, 2.0, 16.1, 2.5, 2.0, 17.0, 0.0, 2.0, 17.0, 3.0, 2.0, 14.2, 3.0, 2.00755, 14.9, 2.5, 2.0, 16.1, 2.5, 2.0, 12.3, 2.5, 4.3, 11.5054, 3.0, 4.5, 11.5054, 0.0, 4.3, 11.5, 0.0, 2.0, 11.5, 3.0, 2.0, 14.0, 3.0, 2.0, 11.5, 0.0, 2.0, 14.0, 0.0, 2.0, 14.0, 3.0, 2.0, 12.3, 2.5, 4.3, 17.0, 3.0, 9.0, 17.5054, 3.0, 4.5, 17.5054, 0.0, 4.5, 18.3, 2.5, 4.5, 18.3, 0.0, 4.5, 19.5, 0.0, 4.5, 20.2, 0.0, 4.5, 19.5, 2.5, 4.5, 20.2, 3.0, 4.5, 20.9, 2.5, 1.5, 22.1, 0.0, 1.5, 23.0, 0.0, 9.0, 19.5, 2.5, 4.3, 20.2, 0.0, 4.5, 17.5054, 3.0, 4.3, 22.1, 2.5, 2.0, 22.1, 0.0, 2.0, 23.0, 0.0, 2.0, 20.2, 3.0, 2.00755, 20.2, 0.0, 2.00755, 20.9, 2.5, 2.0, 20.2, 0.0, 2.00755, 20.9, 0.0, 2.0, 20.9, 2.5, 2.0, 22.1, 2.5, 2.0, 23.0, 0.0, 2.0, 23.0, 3.0, 2.0, 20.2, 3.0, 2.00755, 20.9, 2.5, 2.0, 22.1, 2.5, 2.0, 17.5054, 0.0, 4.5, 17.5054, 3.0, 4.5, 17.5, 3.0, 9.0, 17.5054, 0.0, 4.3, 17.5, 0.0, 2.0, 17.5, 3.0, 2.0, 20.0, 3.0, 2.0, 17.5, 0.0, 2.0, 20.0, 0.0, 2.0, 20.0, 3.0, 2.0, 18.3, 2.5, 4.3, 23.0, 3.0, 9.0, 3.95552, 2.5, -7.0, 2.75552, 2.5, -7.0, 2.75552, 0.0, -7.0, -7.0, 0.0, -13.0, -7.0, 3.0, -13.0, -7.0, 3.0, -7.5, -7.0, 3.0, -13.0, 2.75552, 2.5, -7.5, 2.75552, 0.0, -7.5, -7.0, 0.0, -7.5, 5.0, 3.0, -7.5, 5.0, 0.0, -7.5, 3.95552, 2.5, -7.5, 3.95552, 0.0, -7.5, 2.75552, 2.5, -7.5, -7.0, 0.0, -7.5, -7.0, 3.0, -7.5, 5.0, 3.0, -7.5, 3.95552, 2.5, -7.5, 2.75552, 2.5, -7.5, 14.0372, 3.0, -1.5, 10.5, 3.0, -1.5, 14.0372, 0.0, -1.5, 8.5, 3.0, -1.5, 10.5, 0.0, -1.5, 8.5, 0.0, -1.5, 5.5, 3.0, -1.5, 5.5, 0.0, -1.5, 6.75552, 2.5, -1.5, 5.5, 0.0, -1.5, 6.75552, 0.0, -1.5, 6.75552, 2.5, -1.5, 17.0, 3.0, -1.5, 8.5, 3.0, -1.5, 5.5, 3.0, -1.5, 6.75552, 2.5, -1.5, 7.95552, 2.5, -1.5, 7.95552, 0.0, -1.5, 8.5, 0.0, -1.5, 8.5, 3.0, -1.5, 6.75552, 2.5, -1.5, 7.95552, 2.5, -1.5, 20.0, 3.0, -1.5, 20.0, 0.0, -1.5, 17.0, 0.0, -1.5, 8.5, 3.0, -1.5, 7.95552, 2.5, -1.5, 8.5, 0.0, -1.5, 27.0, 3.0, -1.5, 3.95552, 2.5, -7.0, 3.95552, 0.0, -7.0, 5.0, 0.0, -7.0, 5.0, 3.5, -7.0, -7.0, 3.5, -7.0, 2.75552, 2.5, -7.0, -7.0, 3.5, -7.0, -7.0, 0.0, -7.0, 2.75552, 2.5, -7.0, -7.0, 0.0, -7.0, 2.75552, 0.0, -7.0, 2.75552, 2.5, -7.0, 3.95552, 2.5, -7.0, 5.0, 0.0, -7.0, 5.0, 3.5, -7.0, 38.0, 3.0, 1.5, 38.0, 0.0, -1.5, 38.0, 0.0, -1.5, 18.3, 2.5, 4.3, 5.5, 2.5, -9.85, 5.5, 2.5, -9.85, 5.5, 2.5, -8.65, 5.0, 2.5, -8.65, 5.5, 2.5, -8.65, 5.5, 1.19209e-07, -8.65, 5.0, 1.19209e-07, -8.65, 5.5, 1.19209e-07, -9.85, 5.0, 1.19209e-07, -9.85, 5.0, 1.19209e-07, -8.65, 5.0, 3.0, -13.0, 5.0, 0.0, -13.0, 5.0, 2.5, -9.85, 5.0, 0.0, -13.0, 5.0, 1.19209e-07, -9.85, 5.0, 2.5, -9.85, 5.0, 1.19209e-07, -8.65, 5.0, 0.0, -7.5, 5.0, 2.5, -8.65, 5.0, 0.0, -7.5, 5.0, 3.0, -7.5, 5.0, 2.5, -8.65, 5.0, 3.0, -13.0, 5.0, 2.5, -9.85, 5.0, 3.0, -7.5),
		Vector3Array(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 4.76837e-07, 0.0, 1.0, 4.76837e-07, 0.0, 1.0, 4.76837e-07, 0.0, 0.0, 1.36419e-13, 1.0, 0.0, 1.36419e-13, 1.0, 0.0, 1.36419e-13, 1.0, 1.0, -1.11262e-06, 3.17892e-07, 1.0, -1.11262e-06, 3.17892e-07, 1.0, -1.11262e-06, 3.17892e-07, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -9.53674e-06, 0.0, -1.0, -9.53674e-06, 0.0, -1.0, -9.53674e-06, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -9.53672e-08, 1.0, 0.0, -9.53672e-08, 1.0, 0.0, -9.53672e-08, 1.0, 1.0, 0.0, -2.54313e-06, 1.0, 0.0, -2.54313e-06, 1.0, 0.0, -2.54313e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.32456e-07, 0.0, -1.0, -1.32456e-07, 0.0, -1.0, -1.32456e-07, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.00269605, -0.00485344, 0.999985, 0.00269605, -0.00485344, 0.999985, 0.00269605, -0.00485344, 0.999985, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999997, 0.0, -0.00233802, 0.999997, 0.0, -0.00233802, 0.999997, 0.0, -0.00233802, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.71661e-05, 0.0, -1.0, 1.71661e-05, 0.0, -1.0, 1.71661e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.25331e-06, -3.03833e-07, -1.0, 1.25331e-06, -3.03833e-07, -1.0, 1.25331e-06, -3.03833e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -2.28265e-07, 0.0, -1.0, -2.28265e-07, 0.0, -1.0, -2.28265e-07, 0.0, -1.0, 1.0, -5.05275e-14, 0.0, 1.0, -5.05275e-14, 0.0, 1.0, -5.05275e-14, 0.0, -5.44957e-07, 0.0, 1.0, -5.44957e-07, 0.0, 1.0, -5.44957e-07, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.00269605, -0.00485345, 0.999985, 0.00269605, -0.00485345, 0.999985, 0.00269605, -0.00485345, 0.999985, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.00269605, -0.00485345, 0.999985, 0.00269605, -0.00485345, 0.999985, 0.00269605, -0.00485345, 0.999985, 0.999999, 0.0, 0.00119527, 0.999999, 0.0, 0.00119527, 0.999999, 0.0, 0.00119527, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -2.31194e-07, 1.0, 0.0, -2.31194e-07, 1.0, 0.0, -2.31194e-07, -1.58946e-07, 0.0, 1.0, -1.58946e-07, 0.0, 1.0, -1.58946e-07, 0.0, 1.0, 1.58946e-07, 1.27157e-06, -1.0, 1.58946e-07, 1.27157e-06, -1.0, 1.58946e-07, 1.27157e-06, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.94728e-07, 1.0, 0.0, -7.94728e-07, 1.0, 0.0, -7.94728e-07, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -2.67029e-07, -1.0, 0.0, -2.67029e-07, -1.0, 0.0, -2.67029e-07, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, -1.90735e-06, 0.0, -1.0, -1.90735e-06, 0.0, -1.0, -1.90735e-06, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.90735e-07, -3.05176e-07, 1.0, 1.90735e-07, -3.05176e-07, 1.0, 1.90735e-07, -3.05176e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.19209e-06, 0.0, 1.0, -1.19209e-06, 0.0, 1.0, -1.19209e-06, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.15255e-07, 4.76837e-07, 1.0, -7.15255e-07, 4.76837e-07, 1.0, -7.15255e-07, 4.76837e-07, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, -5.72205e-07, -1.0, 0.0, -5.72205e-07, -1.0, 0.0, -5.72205e-07, -1.0, 0.0, 4.8161e-07, -1.0, 0.0, 4.8161e-07, -1.0, 0.0, 4.8161e-07, -1.0, -3.8147e-07, 5.77932e-07, -1.0, -3.8147e-07, 5.77932e-07, -1.0, -3.8147e-07, 5.77932e-07, -1.0, -1.51582e-13, -6.35783e-07, -1.0, -1.51582e-13, -6.35783e-07, -1.0, -1.51582e-13, -6.35783e-07, -1.0, -9.53674e-06, 0.0, -1.0, -9.53674e-06, 0.0, -1.0, -9.53674e-06, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.41567e-06, 1.0, 0.0, 1.41567e-06, 1.0, 0.0, 1.41567e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.90735e-07, 3.05176e-06, 1.0, 1.90735e-07, 3.05176e-06, 1.0, 1.90735e-07, 3.05176e-06, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 2.98023e-07, 1.19209e-07, -1.0, 2.98023e-07, 1.19209e-07, -1.0, 2.98023e-07, 1.19209e-07, -1.0, 1.40246e-07, -1.12197e-07, -1.0, 1.40246e-07, -1.12197e-07, -1.0, 1.40246e-07, -1.12197e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 2.64909e-07, 0.0, -1.0, 2.64909e-07, 0.0, -1.0, 2.64909e-07, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 5.5263e-07, -1.10526e-07, -1.0, 5.5263e-07, -1.10526e-07, -1.0, 5.5263e-07, -1.10526e-07, -1.0, 2.76316e-07, 0.0, -1.0, 2.76316e-07, 0.0, -1.0, 2.76316e-07, 0.0, -1.0, -1.98682e-07, -7.94728e-07, -1.0, -1.98682e-07, -7.94728e-07, -1.0, -1.98682e-07, -7.94728e-07, -1.0, 0.0, 1.19209e-07, -1.0, 0.0, 1.19209e-07, -1.0, 0.0, 1.19209e-07, -1.0, 0.0, 0.0, -1.0, -1.98682e-07, -7.94728e-07, -1.0, -1.98682e-07, -7.94728e-07, -1.0, -1.98682e-07, -7.94728e-07, -1.0, 1.32458e-07, 1.05967e-07, -1.0, 1.32458e-07, 1.05967e-07, -1.0, 1.32458e-07, 1.05967e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.6094e-07, -1.0, 0.0, -1.6094e-07, -1.0, 0.0, -1.6094e-07, -1.0, 0.0, 0.0, -1.0, 5.29812e-07, -1.05962e-07, -1.0, 5.29812e-07, -1.05962e-07, -1.0, 5.29812e-07, -1.05962e-07, -1.0, 2.64907e-07, 0.0, -1.0, 2.64907e-07, 0.0, -1.0, 2.64907e-07, 0.0, -1.0, 2.98023e-08, 0.0, -1.0, 2.98023e-08, 0.0, -1.0, 2.98023e-08, 0.0, -1.0, -3.97364e-08, -1.27157e-06, -1.0, -3.97364e-08, -1.27157e-06, -1.0, -3.97364e-08, -1.27157e-06, -1.0, -1.98681e-07, 7.94726e-07, -1.0, -1.98681e-07, 7.94726e-07, -1.0, -1.98681e-07, 7.94726e-07, -1.0, 2.98023e-08, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 0.0107837, 0.0, 0.999942, 0.0107837, 0.0, 0.999942, 0.0107837, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, -4.41516e-08, -1.76606e-07, 1.0, -4.41516e-08, -1.76606e-07, 1.0, -4.41516e-08, -1.76606e-07, 1.0, 9.93297e-08, -0.0150949, 0.999886, 9.93297e-08, -0.0150949, 0.999886, 9.93297e-08, -0.0150949, 0.999886, 1.0, 0.0, 0.0, 0.999999, 0.0, 0.00119499, 0.999999, 0.0, 0.00119499, 0.999999, 0.0, 0.00119499, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, -1.0, 0.0, 0.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 4.3869e-06, -1.0, 0.0, 4.3869e-06, -1.0, 0.0, 4.3869e-06, -1.0, 0.0, -2.81561e-06, -1.0, 0.0, -2.81561e-06, -1.0, 0.0, -2.81561e-06, -1.0, -1.90735e-07, -2.9246e-06, -1.0, -1.90735e-07, -2.9246e-06, -1.0, -1.90735e-07, -2.9246e-06, -1.0, 0.0, 4.35965e-06, -1.0, 0.0, 4.35965e-06, -1.0, 0.0, 4.35965e-06, -1.0, 1.71661e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.32927e-06, 0.0, -1.0, 1.32927e-06, 0.0, -1.0, 1.32927e-06, 0.0, -1.0, 4.08718e-07, -2.72478e-06, -1.0, 4.08718e-07, -2.72478e-06, -1.0, 4.08718e-07, -2.72478e-06, -1.0, -2.28266e-07, 0.0, -1.0, -2.28266e-07, 0.0, -1.0, -2.28266e-07, 0.0, -1.0, 1.0, 0.0, -4.23856e-07, 1.0, 0.0, -4.23856e-07, 1.0, 0.0, -4.23856e-07, -5.44957e-07, 0.0, 1.0, -5.44957e-07, 0.0, 1.0, -5.44957e-07, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 0.0107837, 0.0, 0.999942, 0.0107837, 0.0, 0.999942, 0.0107837, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, -4.41514e-08, -1.76606e-07, 1.0, -4.41514e-08, -1.76606e-07, 1.0, -4.41514e-08, -1.76606e-07, 1.0, 9.93297e-08, -0.0150949, 0.999886, 9.93297e-08, -0.0150949, 0.999886, 9.93297e-08, -0.0150949, 0.999886, 1.0, 0.0, 0.0, 0.999999, 0.0, 0.00119471, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, 0.999997, 0.0, -0.00233746, -1.0, 0.0, 0.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 1.32455e-07, -2.11928e-07, 1.0, 0.0107838, 0.0, 0.999942, 0.0107838, 0.0, 0.999942, 0.0107838, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, 0.0107834, 0.0, 0.999942, -4.41516e-08, -1.76607e-07, 1.0, -4.41516e-08, -1.76607e-07, 1.0, -4.41516e-08, -1.76607e-07, 1.0, 9.93294e-08, -0.0150949, 0.999886, 9.93294e-08, -0.0150949, 0.999886, 9.93294e-08, -0.0150949, 0.999886, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999999, 0.0, 0.00119471, 0.999997, 0.0, -0.00233857, 0.999997, 0.0, -0.00233857, 0.999997, 0.0, -0.00233857, -1.0, 0.0, 0.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, 1.27157e-07, 1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -2.31194e-07, 1.0, 0.0, -2.31194e-07, 1.0, 0.0, -2.31194e-07, -1.58946e-07, 0.0, 1.0, 1.46636e-07, -6.25647e-07, -1.0, 1.46636e-07, -6.25647e-07, -1.0, 1.46636e-07, -6.25647e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.79222e-07, -5.21373e-07, -1.0, 1.79222e-07, -5.21373e-07, -1.0, 1.79222e-07, -5.21373e-07, -1.0, 0.0, -3.17891e-06, -1.0, 0.0, -3.17891e-06, -1.0, 0.0, -3.17891e-06, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 3.22824e-06, 0.0, 1.0, 3.22824e-06, 0.0, 1.0, 3.22824e-06, 0.0, 1.0, 3.22823e-06, 0.0, 1.0, 3.22823e-06, 0.0, 1.0, 3.22823e-06, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -8.42412e-06, 1.0, 0.0, -8.42412e-06, 1.0, 0.0, -8.42412e-06, 1.0, -8.31979e-06, -2.6273e-07, 1.0, -8.31979e-06, -2.6273e-07, 1.0, -8.31979e-06, -2.6273e-07, 1.0, 0.0, -7.94727e-06, 1.0, 0.0, -7.94727e-06, 1.0, 0.0, -7.94727e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -7.44402e-06, 0.0, 1.0, -7.44402e-06, 0.0, 1.0, -7.44402e-06, 0.0, 1.0, 0.0, 0.0, 1.0, -1.36959e-06, -3.65225e-07, 1.0, -1.36959e-06, -3.65225e-07, 1.0, -1.36959e-06, -3.65225e-07, 1.0, 0.0, -1.27157e-06, 1.0, 0.0, -1.27157e-06, 1.0, 0.0, -1.27157e-06, 1.0, 9.77574e-08, 0.0, 1.0, 9.77574e-08, 0.0, 1.0, 9.77574e-08, 0.0, 1.0, 9.77574e-08, 0.0, 1.0, 9.77574e-08, 0.0, 1.0, 9.77574e-08, 0.0, 1.0, -9.13063e-07, 0.0, 1.0, -9.13063e-07, 0.0, 1.0, -9.13063e-07, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 4.03672e-07, -1.0, 0.0, 4.03672e-07, -1.0, 0.0, 4.03672e-07, -1.0, 0.0, 4.84406e-07, -1.0, 0.0, 4.84406e-07, -1.0, 0.0, 4.84406e-07, -1.0, -1.90735e-07, -1.32685e-06, -1.0, -1.90735e-07, -1.32685e-06, -1.0, -1.90735e-07, -1.32685e-06, -1.0, 0.0, -9.67497e-07, -1.0, 0.0, -9.67497e-07, -1.0, 0.0, -9.67497e-07, -1.0, -1.90735e-06, 0.0, -1.0, -1.90735e-06, 0.0, -1.0, -1.90735e-06, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 3.17892e-07, -1.76847e-13, -1.0, 1.0, 3.17892e-07, -1.76847e-13, -1.0, 1.0, 3.17892e-07, -1.76847e-13, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -2.54313e-06, 0.0, -1.0, 1.0, -2.54313e-06, 0.0, -1.0, 1.0, -2.54313e-06, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, -1.32456e-07, -1.0, 1.0, 0.0, -1.32456e-07, -1.0, 1.0, 0.0, -1.32456e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 7.28148e-08, 0.0, -1.0, 1.0, 1.99741e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.999996, -4.52012e-12, -0.00269608, 1.0, 0.999996, -4.52012e-12, -0.00269608, 1.0, 0.999996, -4.52012e-12, -0.00269608, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, -0.00233802, 0.0, -0.999997, 1.0, -0.00233802, 0.0, -0.999997, 1.0, -0.00233802, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.94729e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 1.25331e-06, -1.0, 1.0, 0.0, 1.25331e-06, -1.0, 1.0, 0.0, 1.25331e-06, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.3696e-07, -2.28265e-07, -1.0, 1.0, 1.3696e-07, -2.28265e-07, -1.0, 1.0, 1.3696e-07, -2.28265e-07, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 0.0, -0.994964, 0.100229, -1.0, 0.0, -0.994964, 0.100229, -1.0, 0.0, -0.994964, 0.100229, -1.0, 1.0, -5.8089e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 7.28148e-08, 0.0, -1.0, 1.0, 1.99741e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.999996, 9.04026e-12, -0.00269608, 1.0, 0.999996, 9.04026e-12, -0.00269608, 1.0, 0.999996, 9.04026e-12, -0.00269608, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.94729e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 7.28148e-08, 0.0, -1.0, 1.0, 1.99741e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.999996, 1.69505e-11, -0.00269608, 1.0, 0.999996, 1.69505e-11, -0.00269608, 1.0, 0.999996, 1.69505e-11, -0.00269608, 1.0, 0.00119527, 0.0, -0.999999, 1.0, 0.00119527, 0.0, -0.999999, 1.0, 0.00119527, 0.0, -0.999999, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.94729e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, 1.0, 0.0, 1.58946e-07, 1.0, 1.0, 0.0, 1.58946e-07, 1.0, 1.0, 0.0, 1.58946e-07, 1.0, 1.0, 0.0, 1.58946e-07, -1.0, 1.0, 0.0, 1.58946e-07, -1.0, 1.0, 0.0, 1.58946e-07, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.905687, 0.423947, 3.36922e-07, 1.0, 0.905687, 0.423947, 3.36922e-07, 1.0, 0.905687, 0.423947, 3.36922e-07, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, -2.72478e-08, -1.0, 1.0, 0.0, -1.92052e-08, -1.0, 1.0, 0.0, -1.01867e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -3.05176e-07, -2.18279e-14, -1.0, 1.0, -3.05176e-07, -2.18279e-14, -1.0, 1.0, -3.05176e-07, -2.18279e-14, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 2.84217e-13, -1.0, 1.0, 0.0, 2.84217e-13, -1.0, 1.0, 0.0, 2.84217e-13, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 4.76837e-07, -1.7053e-13, -1.0, 1.0, 4.76837e-07, -1.7053e-13, -1.0, 1.0, 4.76837e-07, -1.7053e-13, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 5.72205e-07, 0.0, -1.0, -1.0, 5.72205e-07, 0.0, -1.0, -1.0, 5.72205e-07, 0.0, -1.0, -1.0, -4.8161e-07, 1.12877e-08, -1.0, -1.0, -4.8161e-07, 1.12877e-08, -1.0, -1.0, -4.8161e-07, 1.12877e-08, -1.0, -1.0, -5.77932e-07, -1.3779e-14, -1.0, -1.0, -5.77932e-07, -1.3779e-14, -1.0, -1.0, -5.77932e-07, -1.3779e-14, -1.0, -1.0, 6.35783e-07, -9.93411e-09, -1.0, -1.0, 6.35783e-07, -9.93411e-09, -1.0, -1.0, 6.35783e-07, -9.93411e-09, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -1.5002e-07, 0.0, 1.0, 1.0, -2.93919e-08, 0.0, 1.0, 1.0, -1.28369e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 3.05176e-06, 2.86103e-07, -1.0, 1.0, 3.05176e-06, 2.86103e-07, -1.0, 1.0, 3.05176e-06, 2.86103e-07, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 2.98023e-07, -1.0, 1.0, 0.0, 2.98023e-07, -1.0, 1.0, 0.0, 2.98023e-07, -1.0, 1.0, 0.0, 1.40246e-07, -1.0, 1.0, 0.0, 1.40246e-07, -1.0, 1.0, 0.0, 1.40246e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 2.64909e-07, -1.0, 1.0, 0.0, 2.64909e-07, -1.0, 1.0, 0.0, 2.64909e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 5.5263e-07, -1.0, 1.0, 0.0, 5.5263e-07, -1.0, 1.0, 0.0, 5.5263e-07, -1.0, 1.0, 0.0, 2.76316e-07, -1.0, 1.0, 0.0, 2.76316e-07, -1.0, 1.0, 0.0, 2.76316e-07, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, -1.98682e-07, -1.0, 1.0, 0.0, 1.32458e-07, -1.0, 1.0, 0.0, 1.32458e-07, -1.0, 1.0, 0.0, 1.32458e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 5.29812e-07, -1.0, 1.0, 0.0, 5.29812e-07, -1.0, 1.0, 0.0, 5.29812e-07, -1.0, 1.0, 0.0, 2.64907e-07, -1.0, 1.0, 0.0, 2.64907e-07, -1.0, 1.0, 0.0, 2.64907e-07, -1.0, 1.0, 0.0, 2.98023e-08, -1.0, 1.0, 0.0, 2.98023e-08, -1.0, 1.0, 0.0, 2.98023e-08, -1.0, 1.0, 0.0, -3.97364e-08, -1.0, 1.0, 0.0, -3.97364e-08, -1.0, 1.0, 0.0, -3.97364e-08, -1.0, 1.0, 0.0, -1.98681e-07, -1.0, 1.0, 0.0, -1.98681e-07, -1.0, 1.0, 0.0, -1.98681e-07, -1.0, 1.0, 0.0, 2.98023e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 1.0, 8.83032e-08, 4.41516e-08, 1.0, 1.0, 8.83032e-08, 4.41516e-08, 1.0, 1.0, 8.83032e-08, 4.41516e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 0.0, 0.0, -1.0, 1.0, 0.00119499, 0.0, -0.999999, 1.0, 0.00119499, 0.0, -0.999999, 1.0, 0.00119499, 0.0, -0.999999, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -4.3869e-06, 0.0, -1.0, -1.0, -4.3869e-06, 0.0, -1.0, -1.0, -4.3869e-06, 0.0, -1.0, -1.0, 2.81561e-06, 2.27065e-08, -1.0, -1.0, 2.81561e-06, 2.27065e-08, -1.0, -1.0, 2.81561e-06, 2.27065e-08, -1.0, -1.0, 2.9246e-06, 2.72849e-14, -1.0, -1.0, 2.9246e-06, 2.72849e-14, -1.0, -1.0, 2.9246e-06, 2.72849e-14, -1.0, -1.0, -4.35965e-06, -1.70299e-08, -1.0, -1.0, -4.35965e-06, -1.70299e-08, -1.0, -1.0, -4.35965e-06, -1.70299e-08, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 1.32927e-06, -1.0, 1.0, 0.0, 1.32927e-06, -1.0, 1.0, 0.0, 1.32927e-06, -1.0, 1.0, 0.0, 4.08718e-07, -1.0, 1.0, 0.0, 4.08718e-07, -1.0, 1.0, 0.0, 4.08718e-07, -1.0, 1.0, 0.0, -2.28266e-07, -1.0, 1.0, 0.0, -2.28266e-07, -1.0, 1.0, 0.0, -2.28266e-07, -1.0, -4.23856e-07, 0.0, -1.0, 1.0, -4.23856e-07, 0.0, -1.0, 1.0, -4.23856e-07, 0.0, -1.0, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 1.0, 0.0, 5.44957e-07, 1.0, 0.0, -0.395718, 0.918372, 1.0, 0.0, -0.395718, 0.918372, 1.0, 0.0, -0.395717, 0.918372, 1.0, 1.0, -9.63805e-08, 0.0, 1.0, 1.0, -2.93919e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, -1.70289e-07, -0.0107837, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 1.0, 8.83032e-08, 4.41514e-08, 1.0, 1.0, 8.83032e-08, 4.41514e-08, 1.0, 1.0, 8.83032e-08, 4.41514e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 1.0, 0.0, -9.9341e-08, 1.0, 0.0, 0.0, -1.0, 1.0, 0.00119471, 0.0, -0.999999, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, -0.00233746, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, -9.63805e-08, 0.0, 1.0, 1.0, -2.93919e-08, 0.0, 1.0, 1.0, -6.14442e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 1.0, 0.0, -1.32455e-07, 1.0, 0.999942, -1.70289e-07, -0.0107838, 1.0, 0.999942, -1.70289e-07, -0.0107838, 1.0, 0.999942, -1.70289e-07, -0.0107838, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 0.999942, 0.0, -0.0107834, 1.0, 1.0, 8.83032e-08, 4.41517e-08, 1.0, 1.0, 8.83032e-08, 4.41517e-08, 1.0, 1.0, 8.83032e-08, 4.41517e-08, 1.0, 1.0, -5.04101e-15, -9.93407e-08, 1.0, 1.0, -5.04101e-15, -9.93407e-08, 1.0, 1.0, -5.04101e-15, -9.93407e-08, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, 0.00119471, 0.0, -0.999999, 1.0, -0.00233857, 0.0, -0.999997, 1.0, -0.00233857, 0.0, -0.999997, 1.0, -0.00233857, 0.0, -0.999997, 1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, -2.31194e-07, 0.0, -1.0, 1.0, 1.0, 0.0, 1.58946e-07, 1.0, 1.0, 0.0, 1.46636e-07, -1.0, 1.0, 0.0, 1.46636e-07, -1.0, 1.0, 0.0, 1.46636e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 1.79222e-07, -1.0, 1.0, 0.0, 1.79222e-07, -1.0, 1.0, 0.0, 1.79222e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -3.22824e-06, 1.0, 1.0, 0.0, -3.22824e-06, 1.0, 1.0, 0.0, -3.22824e-06, 1.0, 1.0, 0.0, -3.22823e-06, 1.0, 1.0, 0.0, -3.22823e-06, 1.0, 1.0, 0.0, -3.22823e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 8.31979e-06, 1.0, 1.0, 0.0, 8.31979e-06, 1.0, 1.0, 0.0, 8.31979e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 7.44402e-06, 1.0, 1.0, 0.0, 7.44402e-06, 1.0, 1.0, 0.0, 7.44402e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.36959e-06, 1.0, 1.0, 0.0, 1.36959e-06, 1.0, 1.0, 0.0, 1.36959e-06, 1.0, 0.897125, 0.441777, 5.61749e-07, 1.0, 0.897125, 0.441777, 5.61749e-07, 1.0, 0.897125, 0.441777, 5.61749e-07, 1.0, 0.993592, 0.113029, -9.71309e-08, 1.0, 0.993592, 0.113029, -9.7131e-08, 1.0, 0.993592, 0.113029, -9.7131e-08, 1.0, -1.0, 0.0, 9.77574e-08, -1.0, -1.0, 0.0, 9.77574e-08, -1.0, -1.0, 0.0, 9.77574e-08, -1.0, 1.0, 6.52187e-08, 9.13063e-07, 1.0, 1.0, 6.52188e-08, 9.13063e-07, 1.0, 1.0, 6.52188e-08, 9.13063e-07, 1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -4.03672e-07, 0.0, -1.0, -1.0, -4.03672e-07, 0.0, -1.0, -1.0, -4.03672e-07, 0.0, -1.0, -1.0, -4.84406e-07, 0.0, -1.0, -1.0, -4.84406e-07, 0.0, -1.0, -1.0, -4.84406e-07, 0.0, -1.0, -1.0, 1.32685e-06, 1.58173e-14, -1.0, -1.0, 1.32685e-06, 1.58173e-14, -1.0, -1.0, 1.32685e-06, 1.58173e-14, -1.0, -1.0, 9.67497e-07, 0.0, -1.0, -1.0, 9.67497e-07, 0.0, -1.0, -1.0, 9.67497e-07, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(-0.394765, 0.399668, -0.193654, 0.600779, -0.193654, 0.399668, 1.68994, 0.109589, 4.18994, -0.390411, -1.81006, -0.390411, 1.14734, 1.35959, 0.897334, 0.109589, 0.897334, 1.35959, 0.189938, 0.109589, 1.43994, -0.140411, -0.0600617, -0.140411, 0.897334, -0.189938, 1.14734, 0.810062, 0.897334, 0.810062, -5.10266, 0.109589, -5.35266, 1.35959, -5.35266, 0.109589, -5.10266, -0.689938, -5.35266, 0.310062, -5.35266, -0.689938, 1.68994, 0.109589, 0.689938, 0.109589, -3.31006, -0.140411, 1.54734, 0.109589, 2.14734, 0.109589, 2.49734, -0.140411, -5.10266, 1.35959, -5.35266, 0.109589, -5.35266, 1.35959, 0.189938, 1.35959, -0.0600617, -0.140411, -0.0600617, 1.35959, 1.43994, -0.140411, 1.18994, 1.35959, 1.43994, 1.35959, 1.14734, 1.35959, 0.897334, 0.109589, 1.14734, 0.109589, -0.0600619, 1.35959, -0.310062, 0.109589, -0.310062, 1.35959, -0.0600617, 0.109589, -0.310062, 1.35959, -0.310062, 0.109589, 4.06343, -0.277778, 4.06343, 1.22222, 3.61344, -0.0277778, 0.897342, 1.35959, -5.10266, -0.390411, 0.897342, -0.390411, 6.97041, -0.140411, -3.31006, 1.35959, 6.97041, 1.35959, 3.89734, -0.140411, 1.14734, 1.35959, 1.14734, -0.140411, -1.56006, 0.109589, -1.46006, 1.35959, -1.56006, 1.35959, -1.56006, -0.140411, -0.313836, 1.35959, -0.313836, -0.140411, 1.15003, 1.35959, 1.54734, 0.109589, 1.54734, 1.35959, 2.14734, 0.109589, 2.39734, 1.35959, 2.14734, 1.35959, 3.44734, 0.109589, 3.89734, -0.140411, 2.49734, -0.140411, -1.46006, 1.35959, -1.56006, 0.109589, -1.56006, 1.35959, -1.56006, 1.35959, -3.81006, -0.140411, -3.81006, 1.35959, -1.46006, 1.35959, -0.310062, -0.140411, -1.46006, -0.140411, -1.46006, -0.140411, -0.310062, 1.35959, -1.46006, 1.35959, 1.14734, 1.35959, 2.39734, -0.140411, 1.14734, -0.140411, 2.39734, -0.140411, -0.279971, 0.681761, 0.320029, 0.581761, 0.320029, 0.681761, 1.18994, 0.109589, 0.189938, 0.109589, -1.81006, -0.390411, -3.81006, 1.35959, -0.310062, -0.140411, -0.310062, 1.35959, 1.43994, 1.35959, 1.68994, 0.109589, 1.68994, 1.35959, 2.3751, -0.43994, 1.7751, -0.68994, 2.3751, -0.68994, 1.43994, 0.109589, 1.68994, 1.35959, 1.68994, 0.109589, 1.7751, 1.35959, 1.3251, -0.140411, 1.7751, 0.109589, 1.7751, 0.109589, 4.0751, -0.140411, 2.3751, 0.109589, 4.0751, -0.140411, 2.3751, 1.35959, 2.3751, 0.109589, 5.18994, 1.35959, 1.68994, -0.140411, 1.68994, 1.35959, 4.0751, -0.140411, 1.3251, 1.35959, 4.0751, 1.35959, 3.21473, -4.17083, 3.80383, -1.02341, 3.21473, -0.670831, 1.54734, 0.109589, 2.14734, 0.109589, 2.49734, -0.140411, -0.0600619, 1.35959, -0.310062, 0.109589, -0.310062, 1.35959, -0.0600617, 0.109589, -0.310062, 1.35959, -0.310062, 0.109589, 3.89734, -0.140411, 1.14734, 1.35959, 1.14734, -0.140411, -1.56006, 0.109589, -1.46006, 1.35959, -1.56006, 1.35959, -1.56006, -0.140411, -0.313836, 1.35959, -0.313836, -0.140411, 1.15003, 1.35959, 1.54734, 0.109589, 1.54734, 1.35959, 2.14734, 0.109589, 2.39734, 1.35959, 2.14734, 1.35959, 3.44734, 0.109589, 3.89734, -0.140411, 2.49734, -0.140411, -1.46006, 1.35959, -1.56006, 0.109589, -1.56006, 1.35959, -1.56006, 1.35959, -3.81006, -0.140411, -3.81006, 1.35959, -1.46006, 1.35959, -0.310062, -0.140411, -1.46006, -0.140411, -1.46006, -0.140411, -0.310062, 1.35959, -1.46006, 1.35959, 1.14734, 1.35959, 2.39734, -0.140411, 1.14734, -0.140411, 2.39734, -0.140411, -0.279971, 0.681761, 0.320029, 0.581761, 0.320029, 0.681761, -3.81006, 1.35959, -0.310062, -0.140411, -0.310062, 1.35959, 1.54734, 0.109589, 2.14734, 0.109589, 2.49734, -0.140411, -0.0600619, 1.35959, -0.310062, 0.109589, -0.310062, 1.35959, -0.0600617, 0.109589, -0.310062, 1.35959, -0.310062, 0.109589, 3.89734, -0.140411, 1.14734, 1.35959, 1.14734, -0.140411, -1.56006, 0.109589, -1.46006, 1.35959, -1.56006, 1.35959, -1.56006, -0.140411, -0.313836, 1.35959, -0.313836, -0.140411, 1.15003, 1.35959, 1.54734, 0.109589, 1.54734, 1.35959, 2.14734, 0.109589, 2.39734, 1.35959, 2.14734, 1.35959, 3.44734, 0.109589, 3.89734, -0.140411, 2.49734, -0.140411, -1.56006, 1.35959, -3.81006, -0.140411, -3.81006, 1.35959, -1.46006, 1.35959, -0.310062, -0.140411, -1.46006, -0.140411, -1.46006, -0.140411, -0.310062, 1.35959, -1.46006, 1.35959, 1.14734, 1.35959, 2.39734, -0.140411, 1.14734, -0.140411, 2.39734, -0.140411, -0.279971, 0.681761, 0.320029, 0.581761, 0.320029, 0.681761, -3.81006, 1.35959, -0.310062, -0.140411, -0.310062, 1.35959, -0.482143, 1.27679, -0.232143, 0.0267857, -0.232143, 1.27679, 1.88888, 1.48214, 1.28888, 1.23214, 1.88888, 1.23214, -0.482143, 0.0267857, -0.232143, 1.27679, -0.232143, 0.0267857, 2.51786, 1.27679, -0.232142, -0.223214, -0.232142, 1.27679, 2.41112, -0.223214, -3.58888, 1.27679, 2.41112, 1.27679, -3.58888, -0.223214, 2.41112, -0.223214, 1.28888, 0.0267857, 4.98759, 1.225, 6.98759, 1.225, 4.98759, -0.275, 1.7751, -0.43994, 1.43994, 0.109589, 4.18994, -0.390411, -1.17857, -0.0357143, 3.82143, 1.46429, -1.17857, 1.46429, -1.67857, -0.0357143, -1.67857, 1.46429, -1.67857, 1.46429, -1.17857, -0.0357143, -1.67857, -0.0357143, 1.25, -0.0357143, -0.25, 1.46429, -0.25, -0.0357143, -1.17857, 1.46429, 3.82143, -0.0357143, 0.55, 1.125, 0.45, -0.125, 0.45, 1.125, -0.482143, 1.27679, -0.232143, 0.0267857, -0.232143, 1.27679, 1.88888, 1.48214, 1.28888, 1.23214, 1.88888, 1.23214, -0.482143, 0.0267857, -0.232143, 1.27679, -0.232143, 0.0267857, -0.482143, 1.27679, -0.232143, 1.27679, -0.482143, 1.27679, 0.550001, -0.0625, -0.0500002, -0.0625, -0.625, -0.3125, -0.394765, 0.399668, -0.394765, 0.600779, -0.193654, 0.600779, -1.81006, -0.390411, -1.81006, 1.35959, 0.689938, 0.109589, 0.689938, 1.35959, 1.68994, 1.35959, 4.18994, 1.35959, 1.68994, 0.109589, 4.18994, 1.35959, 4.18994, -0.390411, 1.68994, 0.109589, -1.81006, -0.390411, 0.689938, 0.109589, 1.68994, 0.109589, 1.14734, 1.35959, 1.14734, 0.109589, 0.897334, 0.109589, 0.189938, 0.109589, 1.18994, 0.109589, 1.43994, -0.140411, 1.14734, -0.189938, -5.10266, 1.35959, -5.10266, 0.310062, 0.689938, 0.109589, 0.689938, 1.35959, -3.31006, 1.35959, 6.97041, -0.140411, 6.97041, 1.35959, 1.68994, 0.109589, 6.97041, 1.35959, 1.68994, 1.35959, 1.68994, 0.109589, 0.689938, 0.109589, -3.31006, 1.35959, -3.31006, -0.140411, 6.97041, -0.140411, 1.68994, 0.109589, -3.31006, -0.140411, 1.15003, -0.140411, 1.15003, 1.35959, 1.54734, 0.109589, 1.54734, 1.35959, 2.14734, 1.35959, 2.49734, 1.35959, 1.15003, -0.140411, 1.54734, 0.109589, 2.49734, -0.140411, -5.10266, 1.35959, -5.10266, 0.109589, -5.35266, 0.109589, 0.189938, 1.35959, 0.189938, 0.109589, -0.0600617, -0.140411, 1.43994, -0.140411, 1.18994, 0.109589, 1.18994, 1.35959, 0.897334, 1.35959, -0.0600618, 0.109589, -0.0600617, 1.35959, -2.18657, 1.22222, -2.38657, 1.22222, -2.38657, -0.0277778, -2.98657, -0.0277778, -2.98657, 1.22222, -4.68657, 1.22222, -0.417979, 1.22222, -2.18657, 1.22222, -2.18657, -0.277778, -2.38657, -0.0277778, -2.98657, -0.0277778, -4.68657, 1.22222, -3.18657, -0.277778, -4.68657, 1.22222, -4.68657, -0.277778, -3.18657, -0.277778, 0.0134459, 1.22222, -0.417979, 1.22222, 0.0134459, -0.0277778, 0.0134459, -0.0277778, -0.417979, 1.22222, -0.417979, -0.277778, -2.38657, -0.0277778, -2.98657, -0.0277778, -3.18657, -0.277778, -3.18657, -0.277778, -2.18657, -0.277778, -2.38657, -0.0277778, -0.417979, -0.277778, 0.0134459, -0.0277778, -0.417979, -0.277778, 0.613446, -0.0277778, 1.06343, 1.22222, 0.613446, 1.22222, 0.613446, -0.0277778, 2.56343, 1.22222, 1.06343, 1.22222, 1.06343, -0.277778, 1.06343, 1.22222, 0.613446, -0.0277778, 1.06343, -0.277778, -0.417979, -0.277778, 1.06343, -0.277778, 0.613446, -0.0277778, 2.56343, -0.277778, 3.01344, 1.22222, 2.56343, 1.22222, 3.01344, -0.0277778, 3.01344, -0.0277778, 2.56343, 1.22222, 2.56343, -0.277778, 4.06343, -0.277778, 6.06343, -0.277778, 6.06343, 1.22222, 2.56343, -0.277778, 4.06343, -0.277778, 3.01344, -0.0277778, 3.61344, -0.0277778, 3.01344, -0.0277778, 4.06343, -0.277778, 4.06343, 1.22222, 4.06343, 1.22222, 3.61344, 1.22222, 3.61344, -0.0277778, -5.10266, 1.35959, -3.31006, -0.140411, 3.89734, 1.35959, -1.46006, 0.109589, -1.56006, 1.35959, 1.15003, -0.140411, 3.44734, 0.109589, 3.44734, 1.35959, 3.89734, 1.35959, 2.49734, -0.140411, 2.49734, 1.35959, 2.84734, 0.109589, 2.49734, 1.35959, 2.84734, 1.35959, 2.84734, 0.109589, 3.44734, 0.109589, 3.89734, 1.35959, 3.89734, -0.140411, 2.49734, -0.140411, 2.84734, 0.109589, 3.44734, 0.109589, -1.46006, 0.109589, -1.56006, 1.35959, -1.56006, -0.140411, -3.81006, -0.140411, -1.46006, 1.35959, -0.310062, 1.35959, -0.310062, -0.140411, -0.310062, -0.140411, 1.14734, 1.35959, 2.39734, 1.35959, 2.39734, -0.140411, -0.279971, 0.581761, 0.189938, 0.109589, 0.189938, 1.35959, -1.81006, 1.35959, 4.18994, -0.390411, 4.18994, 1.35959, 1.18994, 0.109589, 4.18994, 1.35959, 1.18994, 1.35959, 1.18994, 0.109589, 0.189938, 0.109589, -1.81006, 1.35959, -1.81006, -0.390411, 4.18994, -0.390411, -3.81006, -0.140411, 1.43994, 0.109589, 1.7751, -0.43994, 1.43994, 1.35959, 1.7751, 1.35959, 1.3251, 1.35959, 1.3251, -0.140411, 1.7751, 0.109589, 1.3251, -0.140411, 4.0751, -0.140411, 4.0751, -0.140411, 4.0751, 1.35959, 2.3751, 1.35959, 5.18994, 1.35959, 5.18994, -0.140411, 1.68994, -0.140411, 4.0751, -0.140411, 1.3251, -0.140411, 1.3251, 1.35959, 3.21473, -4.17083, 4.0751, 1.35959, 3.80383, -1.02341, 1.15003, -0.140411, 1.15003, 1.35959, 1.54734, 1.35959, 2.14734, 1.35959, 2.49734, 1.35959, -0.0600618, 0.109589, -0.0600617, 1.35959, 3.89734, 1.35959, -1.46006, 0.109589, -1.56006, 1.35959, 1.15003, -0.140411, 3.44734, 0.109589, 3.44734, 1.35959, 3.89734, 1.35959, 2.49734, -0.140411, 2.49734, 1.35959, 2.84734, 0.109589, 2.49734, 1.35959, 2.84734, 1.35959, 2.84734, 0.109589, 3.44734, 0.109589, 3.89734, 1.35959, 3.89734, -0.140411, 2.49734, -0.140411, 2.84734, 0.109589, 3.44734, 0.109589, -1.46006, 0.109589, -1.56006, -0.140411, -1.46006, 1.35959, -0.310062, 1.35959, -0.310062, -0.140411, -0.310062, -0.140411, 1.14734, 1.35959, 2.39734, 1.35959, 2.39734, -0.140411, -0.279971, 0.581761, -3.81006, -0.140411, 1.15003, -0.140411, 1.15003, 1.35959, 1.54734, 0.109589, 1.54734, 1.35959, 2.14734, 1.35959, 2.49734, 1.35959, 2.14734, 0.109589, 2.49734, -0.140411, -0.0600618, 0.109589, -0.0600617, 1.35959, 3.89734, 1.35959, -1.46006, 0.109589, -1.56006, 1.35959, 1.15003, -0.140411, 3.44734, 0.109589, 3.44734, 1.35959, 3.89734, 1.35959, 2.49734, -0.140411, 2.49734, 1.35959, 2.84734, 0.109589, 2.49734, 1.35959, 2.84734, 1.35959, 2.84734, 0.109589, 3.44734, 0.109589, 3.89734, 1.35959, 3.89734, -0.140411, 2.49734, -0.140411, 2.84734, 0.109589, 3.44734, 0.109589, -1.56006, 1.35959, -1.56006, -0.140411, -3.81006, -0.140411, -1.46006, 1.35959, -0.310062, 1.35959, -0.310062, -0.140411, -0.310062, -0.140411, 1.14734, 1.35959, 2.39734, 1.35959, 2.39734, -0.140411, -0.279971, 0.581761, -3.81006, -0.140411, -0.482143, 0.0267857, 1.28888, 1.48214, -0.482143, 1.27679, 2.51786, 1.27679, 2.51786, -0.223214, -0.232142, -0.223214, -3.58888, -0.223214, 1.28888, 0.0267857, 1.28888, 1.27679, -3.58888, 1.27679, 2.41112, -0.223214, 2.41112, 1.27679, 1.88888, 0.0267857, 1.88888, 1.27679, 1.28888, 0.0267857, -3.58888, 1.27679, -3.58888, -0.223214, 2.41112, -0.223214, 1.88888, 0.0267857, 1.28888, 0.0267857, 0.506176, -0.275, -1.26241, -0.275, 0.506176, 1.225, -2.26241, -0.275, -1.26241, 1.225, -2.26241, 1.225, -3.76241, -0.275, -3.76241, 1.225, -3.13465, -0.025, -3.76241, 1.225, -3.13465, 1.225, -3.13465, -0.025, 1.98759, -0.275, -2.26241, -0.275, -3.76241, -0.275, -3.13465, -0.025, -2.53465, -0.025, -2.53465, 1.225, -2.26241, 1.225, -2.26241, -0.275, -3.13465, -0.025, -2.53465, -0.025, 3.48759, -0.275, 3.48759, 1.225, 1.98759, 1.225, -2.26241, -0.275, -2.53465, -0.025, -2.26241, 1.225, 6.98759, -0.275, 1.43994, 0.109589, 1.43994, 1.35959, 4.18994, 1.35959, 4.18994, -0.390411, -5.96303, -3.17083, 1.7751, -0.43994, -5.96303, -3.17083, 4.18994, 1.35959, 1.7751, -0.43994, 4.18994, 1.35959, 1.43994, 1.35959, 1.7751, -0.43994, 1.43994, 0.109589, 4.18994, 1.35959, 4.18994, -0.390411, 3.82143, -0.0357143, 1.25, 1.46429, 3.82143, 1.46429, 0.55, -0.125, -0.482143, 0.0267857, 1.88888, 1.48214, 1.28888, 1.48214, 1.28888, 1.23214, -0.482143, 0.0267857, -0.482143, 1.27679, -0.232143, 1.27679, -0.482143, 1.27679, -0.232143, 1.27679, -0.232143, 1.27679, 2.125, -0.3125, 2.125, 1.1875, 0.550001, -0.0625, 2.125, 1.1875, 0.550001, 1.1875, 0.550001, -0.0625, -0.0500002, 1.1875, -0.625, 1.1875, -0.0500002, -0.0625, -0.625, 1.1875, -0.625, -0.3125, -0.0500002, -0.0625, 2.125, -0.3125, 0.550001, -0.0625, -0.625, -0.3125),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 64, 66, 87, 88, 90, 89, 91, 93, 92, 94, 96, 95, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 114, 113, 115, 117, 116, 118, 120, 119, 121, 123, 122, 124, 126, 125, 127, 129, 128, 130, 132, 131, 133, 135, 134, 136, 138, 137, 139, 141, 140, 142, 144, 143, 145, 147, 146, 148, 150, 149, 151, 153, 152, 154, 156, 155, 157, 159, 158, 160, 162, 161, 163, 165, 164, 143, 145, 166, 167, 169, 168, 170, 172, 171, 173, 175, 174, 176, 178, 177, 179, 181, 180, 182, 184, 183, 185, 187, 186, 188, 190, 189, 191, 193, 192, 194, 196, 195, 197, 199, 198, 200, 202, 201, 203, 205, 204, 206, 208, 207, 209, 211, 210, 192, 194, 212, 213, 215, 214, 216, 218, 217, 219, 221, 220, 222, 224, 223, 225, 227, 226, 228, 230, 229, 231, 233, 232, 234, 236, 235, 237, 239, 238, 240, 242, 241, 243, 245, 244, 246, 247, 245, 248, 250, 249, 251, 253, 252, 254, 249, 255, 256, 258, 257, 259, 261, 260, 262, 264, 263, 265, 267, 266, 268, 270, 269, 271, 273, 272, 274, 276, 275, 277, 279, 278, 278, 279, 280, 281, 283, 282, 284, 286, 285, 287, 289, 288, 290, 292, 291, 293, 295, 294, 12, 13, 296, 15, 16, 297, 18, 19, 298, 299, 301, 300, 302, 304, 303, 305, 307, 306, 308, 310, 309, 311, 313, 312, 314, 316, 315, 315, 316, 317, 318, 25, 319, 319, 25, 26, 320, 322, 321, 323, 325, 324, 326, 328, 327, 329, 331, 330, 36, 37, 332, 39, 40, 333, 42, 43, 334, 335, 337, 336, 338, 340, 339, 341, 343, 342, 342, 343, 344, 345, 347, 346, 348, 350, 349, 351, 353, 352, 354, 356, 355, 357, 359, 358, 360, 362, 361, 343, 341, 363, 364, 366, 365, 367, 369, 368, 370, 372, 371, 373, 375, 374, 376, 378, 377, 372, 370, 379, 380, 382, 381, 383, 385, 384, 386, 388, 387, 389, 391, 390, 392, 394, 393, 386, 395, 388, 396, 398, 397, 48, 49, 399, 51, 52, 400, 54, 55, 401, 57, 58, 402, 60, 61, 403, 63, 64, 404, 66, 67, 87, 405, 407, 406, 408, 410, 409, 411, 413, 412, 414, 416, 415, 417, 419, 418, 72, 73, 420, 421, 423, 422, 424, 426, 425, 81, 82, 427, 428, 430, 429, 64, 87, 404, 88, 89, 431, 432, 434, 433, 435, 437, 436, 438, 440, 439, 441, 443, 442, 444, 93, 91, 94, 95, 445, 97, 98, 446, 100, 101, 447, 103, 104, 448, 449, 451, 450, 452, 454, 453, 455, 457, 456, 458, 460, 459, 461, 463, 462, 464, 466, 465, 467, 124, 468, 468, 124, 469, 470, 125, 471, 471, 125, 126, 467, 126, 124, 127, 128, 472, 130, 131, 473, 133, 134, 474, 136, 137, 475, 139, 140, 476, 142, 143, 477, 145, 146, 166, 478, 480, 479, 481, 483, 482, 484, 486, 485, 487, 489, 488, 490, 492, 491, 151, 152, 493, 154, 155, 494, 495, 497, 496, 160, 161, 498, 499, 501, 500, 143, 166, 477, 167, 168, 502, 170, 171, 503, 504, 506, 505, 505, 506, 507, 508, 510, 509, 509, 510, 511, 504, 511, 506, 176, 177, 512, 179, 180, 513, 182, 183, 514, 185, 186, 515, 188, 189, 516, 191, 192, 517, 194, 195, 212, 518, 520, 519, 521, 523, 522, 524, 526, 525, 527, 529, 528, 530, 532, 531, 533, 535, 534, 536, 538, 537, 206, 207, 539, 540, 542, 541, 192, 212, 517, 213, 214, 543, 216, 217, 544, 219, 220, 545, 222, 223, 546, 225, 226, 547, 548, 550, 549, 231, 232, 551, 552, 554, 553, 555, 557, 556, 556, 557, 558, 559, 561, 560, 562, 564, 563, 565, 567, 566, 566, 569, 568, 569, 570, 568, 571, 573, 572, 574, 576, 575, 577, 567, 565, 567, 569, 566, 578, 580, 579, 581, 583, 582, 584, 586, 585, 239, 588, 587, 587, 589, 577, 590, 592, 591, 567, 577, 589, 589, 587, 588, 238, 239, 593, 588, 239, 237, 594, 596, 595, 597, 599, 598, 600, 602, 601, 603, 605, 604, 606, 608, 607, 243, 244, 609, 246, 245, 243, 248, 249, 254, 251, 252, 610, 254, 255, 611, 256, 257, 612, 259, 260, 613, 614, 616, 615, 617, 619, 618, 620, 622, 621, 623, 625, 624, 626, 628, 627, 629, 631, 630, 632, 634, 633, 635, 637, 636)
	],
	"morph_arrays":[]
}
surfaces/2 = {
	"material":SubResource(12),
	"primitive":4,
	"arrays":[
		Vector3Array(5.0, 3.5, -7.0, -7.0, 3.5, 5.0, -7.0, 3.5, -7.0, 9.0, 3.0, -2.0, 5.5, 3.0, -5.0, 9.0, 3.0, -5.0, 5.5, 3.0, 2.0, 8.0, 3.0, 4.3, 5.50538, 3.0, 4.3, 11.0, 3.0, 9.0, 5.5, 3.0, 9.0, 8.2, 3.0, 4.5, 11.5, 3.0, 2.0, 14.0, 3.0, 4.3, 11.5054, 3.0, 4.3, 17.0, 3.0, 9.0, 11.5, 3.0, 9.0, 14.2, 3.0, 4.5, 17.5, 3.0, 2.0, 20.0, 3.0, 4.3, 17.5054, 3.0, 4.3, 23.0, 3.0, 9.0, 17.5, 3.0, 9.0, 20.2, 3.0, 4.5, 5.0, 3.0, -7.5, -7.0, 3.0, -13.0, 5.0, 3.0, -13.0, -7.5, 3.0, -12.561, -10.5, 3.0, 8.0, -10.5, 3.0, -12.561, 8.5, 3.0, 1.5, 5.5, 3.0, -1.5, 8.5, 3.0, -1.5, 27.0, 3.0, -1.5, 28.0, 3.0, 1.5, 27.0, 3.0, 1.5, 28.0, 3.0, -1.5, 38.0, 3.0, 1.5, 28.0, 3.0, 1.5, 5.0, 3.5, 5.0, 9.0, 3.0, -2.0, 5.5, 3.0, -2.00001, 5.5, 3.0, -5.0, 5.5, 3.0, 2.0, 8.0, 3.0, 2.0, 8.0, 3.0, 4.3, 5.50538, 3.0, 4.5, 8.2, 3.0, 4.5, 8.2, 3.0, 2.00755, 11.0, 3.0, 2.0, 11.0, 3.0, 2.0, 11.5, 3.0, 2.0, 14.0, 3.0, 2.0, 14.0, 3.0, 4.3, 11.5, 3.0, 9.0, 11.5054, 3.0, 4.5, 14.2, 3.0, 4.5, 14.2, 3.0, 4.5, 14.2, 3.0, 2.00755, 17.0, 3.0, 2.0, 17.0, 3.0, 2.0, 17.5, 3.0, 2.0, 20.0, 3.0, 2.0, 20.0, 3.0, 4.3, 17.5, 3.0, 9.0, 17.5054, 3.0, 4.5, 20.2, 3.0, 4.5, 20.2, 3.0, 4.5, 20.2, 3.0, 2.00755, 23.0, 3.0, 2.0, 23.0, 3.0, 2.0, -7.0, 3.0, -7.5, -7.5, 3.0, 8.0, 20.0, 3.0, -1.5, 23.0, 3.0, -1.5, 23.0, 3.0, 1.5, 23.0, 3.0, -1.5, 27.0, 3.0, -1.5, 23.0, 3.0, 1.5, 27.0, 3.0, -1.5, 27.0, 3.0, 1.5, 23.0, 3.0, 1.5, 20.0, 3.0, 1.5, 20.0, 3.0, 1.5, 17.0, 3.0, 1.5, 17.0, 3.0, -1.5, 14.0372, 3.0, 1.5, 10.5, 3.0, 1.5, 14.0372, 3.0, -1.5, 10.5, 3.0, 1.5, 8.5, 3.0, 1.5, 10.5, 3.0, -1.5, 17.0, 3.0, -1.5, 17.0, 3.0, 1.5, 17.0, 3.0, -1.5, 10.5, 3.0, -1.5, 5.5, 3.0, 1.5, 28.0, 3.0, -1.5, 38.0, 3.0, -1.5),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, -6.83259e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -5.96047e-08, -1.0, 0.0, -5.96047e-08, -1.0, 0.0, -5.96047e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 5.44957e-07, -1.0, 1.0, 0.0, 5.44957e-07, -1.0, 1.0, 0.0, 5.44957e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 4.67106e-07, -1.0, 1.0, 0.0, 4.67106e-07, -1.0, 1.0, 0.0, 4.67106e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, -6.83259e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -5.96046e-08, 0.0, -1.0, 1.0, -5.96046e-08, 0.0, -1.0, 1.0, -5.96046e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.036967, -3.17083, -5.96303, 2.82917, -5.96303, -3.17083, 3.21473, -0.670831, 0.464728, -4.17083, 3.21473, -4.17083, -0.808647, -0.965252, 0.441353, 0.184748, -0.805959, 0.184748, 1.94135, 2.53475, -0.808647, 2.53475, 0.541353, 0.284748, -0.808647, -0.965252, 0.441353, 0.184748, -0.805959, 0.184748, 1.94135, 2.53475, -0.808647, 2.53475, 0.541353, 0.284748, -0.808647, -0.965252, 0.441353, 0.184748, -0.805959, 0.184748, 1.94135, 2.53475, -0.808647, 2.53475, 0.541353, 0.284748, 3.5, 1.875, -2.5, -0.875, 3.5, -0.874999, -6.21304, -5.95131, -7.71303, 4.32917, -7.71303, -5.95131, -3.09607, 1.25, -4.59607, -0.25, -3.09607, -0.25, -1.67857, -0.25, -1.17857, 1.25, -1.67857, 1.25, -1.17857, -0.25, 3.82143, 1.25, -1.17857, 1.25, 0.036967, 2.82917, 3.21473, -0.670831, 0.464728, -0.670831, 0.464728, -4.17083, -0.808647, -0.965252, 0.441353, -0.965252, 0.441353, 0.184748, -0.805959, 0.284748, 0.541353, 0.284748, 0.541353, -0.961477, 1.94135, -0.965252, 1.94135, -0.965252, -0.808647, -0.965252, 0.441353, -0.965252, 0.441353, 0.184748, -0.808647, 2.53475, -0.805959, 0.284748, 0.541353, 0.284748, 0.541353, 0.284748, 0.541353, -0.961477, 1.94135, -0.965252, 1.94135, -0.965252, -0.808647, -0.965252, 0.441353, -0.965252, 0.441353, 0.184748, -0.808647, 2.53475, -0.805959, 0.284748, 0.541353, 0.284748, 0.541353, 0.284748, 0.541353, -0.961477, 1.94135, -0.965252, 1.94135, -0.965252, -2.5, 1.875, -6.21304, 4.32917, 2.65393, -0.25, 4.15393, -0.25, 4.15393, 1.25, 4.15393, -0.25, 6.15393, -0.25, 4.15393, 1.25, 6.15393, -0.25, 6.15393, 1.25, 4.15393, 1.25, 2.65393, 1.25, 2.65393, 1.25, 1.15393, 1.25, 1.15393, -0.25, -0.327487, 1.25, -2.09607, 1.25, -0.327487, -0.25, -2.09607, 1.25, -3.09607, 1.25, -2.09607, -0.25, 1.15393, -0.25, 1.15393, 1.25, 1.15393, -0.25, -2.09607, -0.25, -4.59607, 1.25, -1.17857, -0.25, 3.82143, -0.25),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 0, 1, 39, 40, 42, 41, 43, 45, 44, 10, 11, 46, 47, 49, 48, 50, 11, 9, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 17, 15, 61, 63, 62, 64, 66, 65, 67, 69, 68, 70, 23, 21, 24, 25, 71, 27, 28, 72, 73, 75, 74, 76, 78, 77, 79, 81, 80, 75, 73, 82, 83, 85, 84, 86, 88, 87, 89, 91, 90, 86, 93, 92, 82, 73, 94, 95, 87, 88, 88, 86, 92, 30, 31, 96, 32, 30, 95, 33, 34, 97, 36, 37, 98)
	],
	"morph_arrays":[]
}
surfaces/3 = {
	"material":SubResource(14),
	"primitive":4,
	"arrays":[
		Vector3Array(15.0, 0.0, -11.0, 5.5, 3.0, -11.0, 5.5, 0.0, -11.0, 15.0, 3.0, -8.0, 15.0, 0.0, -11.0, 15.0, 0.0, -8.0, 15.0, 3.0, -8.0, 5.5, 0.0, -8.0, 5.5, 3.0, -8.0, 5.5, 3.0, -11.0, 5.5, 3.0, -8.0, 5.5, 2.5, -9.85, 15.0, 0.0, -11.0, 15.0, 3.0, -11.0, 5.5, 3.0, -11.0, 15.0, 3.0, -11.0, 15.0, 0.0, -8.0, 5.5, 2.5, -9.85, 5.5, 1.19209e-07, -9.85, 5.5, 0.0, -11.0, 5.5, 3.0, -8.0, 5.5, 0.0, -8.0, 5.5, 2.5, -8.65, 5.5, 0.0, -8.0, 5.5, 1.19209e-07, -8.65, 5.5, 2.5, -8.65, 5.5, 2.5, -9.85, 5.5, 0.0, -11.0, 5.5, 3.0, -11.0, 5.5, 3.0, -8.0, 5.5, 2.5, -8.65, 5.5, 2.5, -9.85),
		Vector3Array(0.0, 2.00774e-07, 1.0, 0.0, 2.00774e-07, 1.0, 0.0, 2.00774e-07, 1.0, -1.0, 0.0, -8.47711e-07, -1.0, 0.0, -8.47711e-07, -1.0, 0.0, -8.47711e-07, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, -4.45051e-07, 6.35783e-07, 1.0, -4.45051e-07, 6.35783e-07, 1.0, -4.45051e-07, 6.35783e-07, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, -8.47711e-07, 0.0, 0.0, -1.0, 1.0, -1.90735e-07, -4.56106e-07, 1.0, -1.90735e-07, -4.56106e-07, 1.0, -1.90735e-07, -4.56106e-07, 1.0, 0.0, 2.93438e-06, 1.0, 0.0, 2.93438e-06, 1.0, 0.0, 2.93438e-06, 1.0, 0.0, 2.34751e-06, 1.0, 0.0, 2.34751e-06, 1.0, 0.0, 2.34751e-06, 1.0, -3.17891e-07, 1.10571e-06, 1.0, -3.17891e-07, 1.10571e-06, 1.0, -3.17891e-07, 1.10571e-06, 1.0, 1.90735e-06, 0.0, 1.0, 1.90735e-06, 0.0, 1.0, 1.90735e-06, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 8.47711e-07, 0.0, -1.0, -1.0, 8.47711e-07, 0.0, -1.0, -1.0, 8.47711e-07, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 6.35783e-07, 0.0, -1.0, 1.0, 6.35783e-07, 0.0, -1.0, 1.0, 6.35783e-07, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 8.47711e-07, 0.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, -4.56106e-07, 1.65857e-07, -1.0, 1.0, -4.56106e-07, 1.65857e-07, -1.0, 1.0, -4.56106e-07, 1.65857e-07, -1.0, 1.0, 2.93438e-06, 0.0, -1.0, 1.0, 2.93438e-06, 0.0, -1.0, 1.0, 2.93438e-06, 0.0, -1.0, 1.0, 2.34751e-06, 0.0, -1.0, 1.0, 2.34751e-06, 0.0, -1.0, 1.0, 2.34751e-06, 0.0, -1.0, 1.0, 1.10571e-06, -1.31811e-13, -1.0, 1.0, 1.10571e-06, -1.31811e-13, -1.0, 1.0, 1.10571e-06, -1.31811e-13, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(1.6875, 0.875, -0.6875, 0.125, -0.6875, 0.875, 0.13125, 0.19375, 0.88125, 0.94375, 0.13125, 0.94375, 1.6875, 0.19375, -0.6875, 0.94375, -0.6875, 0.19375, 0.88125, 0.19375, 0.13125, 0.19375, 0.59375, 0.31875, 1.6875, 0.875, 1.6875, 0.125, -0.6875, 0.125, 0.88125, 0.19375, 1.6875, 0.94375, 0.59375, 0.31875, 0.59375, 0.94375, 0.88125, 0.94375, 0.13125, 0.19375, 0.13125, 0.94375, 0.29375, 0.31875, 0.13125, 0.94375, 0.29375, 0.94375, 0.29375, 0.31875, 0.59375, 0.31875, 0.88125, 0.94375, 0.88125, 0.19375, 0.13125, 0.19375, 0.29375, 0.31875, 0.59375, 0.31875),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 3, 4, 15, 6, 7, 16, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30)
	],
	"morph_arrays":[]
}
surfaces/4 = {
	"material":SubResource(16),
	"primitive":4,
	"arrays":[
		Vector3Array(5.5, 3.0, -8.0, 15.0, 3.0, -11.0, 15.0, 3.0, -8.0, 5.5, 1.19209e-07, -9.85, 5.5, 1.19209e-07, -8.65, 15.0, 0.0, -8.0, 5.5, 3.0, -11.0, 15.0, 0.0, -11.0, 5.5, 0.0, -11.0, 5.5, 1.19209e-07, -9.85, 5.5, 1.19209e-07, -8.65, 5.5, 0.0, -8.0, 15.0, 0.0, -8.0, 15.0, 0.0, -11.0, 5.5, 1.19209e-07, -9.85, 15.0, 0.0, -8.0),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.25483e-08, 1.0, -1.9945e-14, 1.25483e-08, 1.0, -1.9945e-14, 1.25483e-08, 1.0, -1.9945e-14, 0.0, -1.0, 0.0, 0.0, 1.0, -1.03661e-07, 0.0, 1.0, -1.03661e-07, 0.0, 1.0, -1.03661e-07, 0.0, 1.0, 1.83399e-07, 0.0, 1.0, 1.83399e-07, 0.0, 1.0, 1.83399e-07, 1.25483e-08, 1.0, 7.97802e-15, 1.25483e-08, 1.0, 7.97802e-15, 1.25483e-08, 1.0, 7.97802e-15),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.25483e-08, 0.0, 1.0, 1.0, -1.25483e-08, 0.0, 1.0, 1.0, -1.25483e-08, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.25483e-08, 0.0, 1.0, 1.0, -1.25483e-08, 0.0, 1.0, 1.0, -1.25483e-08, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-1.875, 1.25, 2.875, -0.25, 2.875, 1.25, -1.08333, 0.283333, -1.08333, 0.883334, 3.66667, 1.20833, -1.875, -0.25, 3.66667, -0.291667, -1.08333, -0.291667, -1.08333, 0.283333, -1.08333, 0.883334, -1.08333, 1.20833, 3.66667, 1.20833, 3.66667, -0.291667, -1.08333, 0.283333, 3.66667, 1.20833),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 0, 1, 6, 7, 9, 8, 10, 12, 11, 13, 15, 14)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Light_02_Device" type="SpotLight" parent="."]

light_specular = 0.523775
light_color = Color(1.0, 0.0, 0.107965, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 2.004
spot_angle = 67.15
spot_angle_attenuation = 20.0
spot_range = 17.38
transform = Transform(-0.290865, -0.956629, -0.0160771, -0.0551891, -4.36448e-08, 0.998476, -0.955171, 0.291309, -0.0527955, -10.0, 2.9, 0.0)
light_negative = false
shadow_enabled = true

[node name="main_desk-col" type="MeshInstance" parent="."]

mesh = SubResource(7)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 3.0, 0.0, -7.0)

[node name="rooms-col" type="MeshInstance" parent="."]

mesh = SubResource(17)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)

[node name="Light001" type="SpotLight" parent="."]

light_specular = 0.0232558
light_color = Color(0.118822, 0.341509, 1.0, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 15.122
spot_angle = 41.55
spot_angle_attenuation = 1.25
spot_range = 27.07
transform = Transform(-0.290865, -0.771101, 0.566393, -0.0551891, 0.604525, 0.794672, -0.955171, 0.199883, -0.218391, 2.09636, 3.06507, -5.9097)
light_negative = false
shadow_enabled = true

[node name="Light002" type="SpotLight" parent="."]

light_specular = 1.0
light_color = Color(1.0, 0.0979297, 0.210756, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 8.563
spot_angle = 41.55
spot_angle_attenuation = 0.19802
spot_range = 27.07
transform = Transform(-0.217164, 0.939812, -0.263806, -0.580187, 0.0930643, 0.809149, 0.784999, 0.328775, 0.525056, 0.0261491, 3.06507, 1.20475)
light_negative = false
shadow_enabled = true

[node name="Light003" type="SpotLight" parent="."]

light_specular = 0.023256
light_color = Color(0.62359, 1.0, 0.76178, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 8.014
spot_angle = 59.9
spot_angle_attenuation = 0.229048
spot_range = 15.43
transform = Transform(-0.203625, -0.979034, -0.00547342, -0.00135888, -0.00530792, 0.999985, -0.979048, 0.20363, -0.000249563, -1.0, 3.0, -10.25)
light_negative = false
shadow_enabled = true

[node name="Light01_Device" type="OmniLight" parent="."]

light_specular = 1.0
light_color = Color(1.0, 1.0, 1.0, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 1.191
omni_range = 9.77
transform = Transform(1.0, 0.0, 0.0, 0.0, -4.37114e-08, 1.0, 0.0, -1.0, -4.37114e-08, 9.5, 2.9, 0.0)
light_negative = false
shadow_enabled = true

[node name="Light01_Device001" type="OmniLight" parent="."]

light_specular = 1.0
light_color = Color(1.0, 1.0, 1.0, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 1.191
omni_range = 9.77
transform = Transform(1.0, 0.0, 0.0, 0.0, -4.37114e-08, 1.0, 0.0, -1.0, -4.37114e-08, 19.5, 2.9, 0.0)
light_negative = false
shadow_enabled = true

[node name="Light01_Device002" type="OmniLight" parent="."]

light_specular = 1.0
light_color = Color(1.0, 1.0, 1.0, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 1.191
omni_range = 9.77
transform = Transform(1.0, 0.0, 0.0, 0.0, -4.37114e-08, 1.0, 0.0, -1.0, -4.37114e-08, 29.5, 2.9, 0.0)
light_negative = false
shadow_enabled = true

[node name="Light01_Device003" type="OmniLight" parent="."]

light_specular = 1.0
light_color = Color(1.0, 1.0, 1.0, 1.0)
shadow_color = Color(0.0, 0.0, 0.0, 1.0)
light_energy = 0.748
omni_range = 9.77
transform = Transform(1.0, 0.0, 0.0, 0.0, -4.37114e-08, 1.0, 0.0, -1.0, -4.37114e-08, 10.5, 2.5, -9.5)
light_negative = false
shadow_enabled = true
